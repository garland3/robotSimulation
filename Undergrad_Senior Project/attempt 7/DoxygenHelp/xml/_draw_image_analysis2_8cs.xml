<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.3">
  <compounddef id="_draw_image_analysis2_8cs" kind="file">
    <compoundname>DrawImageAnalysis2.cs</compoundname>
    <innerclass refid="class_attempt__7_1_1_draw_image_analysis" prot="public">Attempt_7::DrawImageAnalysis</innerclass>
    <innernamespace refid="namespace_attempt__7">Attempt_7</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Attempt_7</highlight></codeline>
<codeline lineno="2"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Diagnostics;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.IO;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Timers;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Audio;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Content;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.GamerServices;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Graphics;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Input;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Media;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_attempt__7_1_1_draw_image_analysis" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_attempt__7_1_1_draw_image_analysis" kindref="compound" tooltip="This is a game component that implements IUpdateable. Draws the image analysis information.">DrawImageAnalysis</ref><sp/>:<sp/>Microsoft.Xna.Framework.DrawableGameComponent</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26" refid="class_attempt__7_1_1_draw_image_analysis_1aed235d7846bb2f2ace68331beb4ca7f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0c212b6483e545cdb54b744f26ae5aaf" kindref="member" tooltip="These values are part of the double for loops that reduce the computational requirements. These are the values that are incremented.">count1A</ref>,<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1ab82cc146a1cdfc52336d1ae86eb89157" kindref="member">count2A</ref>,<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1afda6ca182d55b530c3188413bfced70c" kindref="member">count1C</ref>,<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1aed235d7846bb2f2ace68331beb4ca7f2" kindref="member">count2C</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>,<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>,<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a39cdb07a4e1cbdf5ebef0c53e9af6c94" kindref="member">UpdateSquareDimForAnalysis</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_attempt__7_1_1_draw_image_analysis_1a2e2dcb54db7f1ebeac6be4cf3b6d7aed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a2e2dcb54db7f1ebeac6be4cf3b6d7aed" kindref="member" tooltip="How many lines to find.">NumberofLinesToFind</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_attempt__7_1_1_draw_image_analysis_1a56819c40d9d3d8898dee1ab7b7f1720b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a56819c40d9d3d8898dee1ab7b7f1720b" kindref="member" tooltip="How precise the hough transform is. How large between possible values.">ThetaIncrement</ref>,<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0783fd297ddd176a784cb49f70833e18" kindref="member">RhoIncrement</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_attempt__7_1_1_draw_image_analysis_1a96d5f79f1b1a104d2ab3f47aa6616d37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_camera" kindref="compound" tooltip="Represents the camera object/class that contains all the information needed about position and target...">Camera</ref><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a96d5f79f1b1a104d2ab3f47aa6616d37" kindref="member" tooltip="Camera used to draw the triangles of what the robot is &amp;quot;thinking&amp;quot;.">camera</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_attempt__7_1_1_draw_image_analysis_1ab649a91f61c546824edd468642c77fa3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;Viewport&gt;<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1ab649a91f61c546824edd468642c77fa3" kindref="member" tooltip="List holding the viewports used in the simulation. This list is created in the Main simulation and th...">viewPortList</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_attempt__7_1_1_draw_image_analysis_1a36779d384eaa0c4188a16758540403e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>BasicEffect<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a36779d384eaa0c4188a16758540403e0" kindref="member" tooltip="BasicEffects for how to draw the triangles.">basicEffects</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>SpriteFont<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>SpriteBatch<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_attempt__7_1_1_draw_image_analysis_1ac921c38d0ea4e068fff70230356a9257" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>VertexPositionColor[]<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1ac921c38d0ea4e068fff70230356a9257" kindref="member" tooltip="VertexPositionColory array that stores the triangles of what the robot is &amp;quot;thinking&amp;quot;. Each triangle represents 1 pixel from the robot&amp;#39;s view. So 640*480 triangles.">vertexArray</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>VertexPositionColor[]<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" kindref="member" tooltip="Stores information about the hough.">houghInfo</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_image_analysis" kindref="compound" tooltip="It was easier to redure 640*480 small triangles and view then from a distance than to put a texture o...">ImageAnalysis</ref><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" kindref="member" tooltip="The image analysis object associated with this class.">imageAnalysis</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_attempt__7_1_1_draw_image_analysis_1a453387b044257078cc5a6b8cb5c736b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a453387b044257078cc5a6b8cb5c736b1" kindref="member" tooltip="A list of the vertexs to draw.">vertexIndex</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_attempt__7_1_1_draw_image_analysis_1a44ab97b569495bde696945acd9728e68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;short&gt;<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a44ab97b569495bde696945acd9728e68" kindref="member">vertexIndexList</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_attempt__7_1_1_draw_image_analysis_1a295eefafafe824bfc196c0d7e88f55aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3[]<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a295eefafafe824bfc196c0d7e88f55aa" kindref="member" tooltip="Stores vector3 locations of the beginning and end points of two lines on the screen. Was part of the old Hough system, but potientially still useful, so has not deleted. 0 = start location of line, 1 = end location ofline.">houghLineStartandStopVectors</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_attempt__7_1_1_draw_image_analysis_1a82c130125f8f918de9e139eff5de225f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a82c130125f8f918de9e139eff5de225f" kindref="member">DrawImageAnalysis</ref>(Game<sp/>game,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a39cdb07a4e1cbdf5ebef0c53e9af6c94" kindref="member">UpdateSquareDimForAnalysis</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a2e2dcb54db7f1ebeac6be4cf3b6d7aed" kindref="member" tooltip="How many lines to find.">NumberofLinesToFind</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a56819c40d9d3d8898dee1ab7b7f1720b" kindref="member" tooltip="How precise the hough transform is. How large between possible values.">ThetaIncrement</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0783fd297ddd176a784cb49f70833e18" kindref="member">RhoIncrement</ref>,<sp/>List&lt;Viewport&gt;<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1ab649a91f61c546824edd468642c77fa3" kindref="member" tooltip="List holding the viewports used in the simulation. This list is created in the Main simulation and th...">viewPortList</ref>,<sp/><ref refid="class_attempt__7_1_1_image_analysis" kindref="compound" tooltip="It was easier to redure 640*480 small triangles and view then from a distance than to put a texture o...">ImageAnalysis</ref><sp/>imaageanalysis)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>base(game)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.screenWidth<sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.screenHeight<sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.UpdateSquareDimForDrawing<sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.UpdateSquareDimForAnalysis<sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a39cdb07a4e1cbdf5ebef0c53e9af6c94" kindref="member">UpdateSquareDimForAnalysis</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.NumberofLinesToFind<sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a2e2dcb54db7f1ebeac6be4cf3b6d7aed" kindref="member" tooltip="How many lines to find.">NumberofLinesToFind</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.ThetaIncrement<sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a56819c40d9d3d8898dee1ab7b7f1720b" kindref="member" tooltip="How precise the hough transform is. How large between possible values.">ThetaIncrement</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.RhoIncrement<sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0783fd297ddd176a784cb49f70833e18" kindref="member">RhoIncrement</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.viewPortList<sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1ab649a91f61c546824edd468642c77fa3" kindref="member" tooltip="List holding the viewports used in the simulation. This list is created in the Main simulation and th...">viewPortList</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" kindref="member" tooltip="The image analysis object associated with this class.">imageAnalysis</ref><sp/>=<sp/>imaageanalysis;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_attempt__7_1_1_draw_image_analysis_1ae271911b749fc6bad5f303da0f6b895d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1ae271911b749fc6bad5f303da0f6b895d" kindref="member" tooltip="Allows the game component to perform any initialization it needs to before starting to run...">Initialize</ref>()</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>new<sp/>SpriteBatch,<sp/>which<sp/>can<sp/>be<sp/>used<sp/>to<sp/>draw<sp/>2D<sp/>textures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SpriteBatch(Game.GraphicsDevice);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" kindref="member" tooltip="Stores information about the hough.">houghInfo</ref><sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" kindref="member" tooltip="The image analysis object associated with this class.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1a897a0f80fbf65670828c8a1a1db13d97" kindref="member">GetHoughInfo</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this.houghInfo<sp/>=<sp/>new<sp/>double[(7<sp/>+<sp/>5)<sp/>*<sp/>NumberofLinesToFind];<sp/>//<sp/>Make<sp/>the<sp/>array<sp/>to<sp/>store<sp/>hough<sp/>information.<sp/>Must<sp/>be<sp/>double<sp/>so<sp/>that<sp/>slopes<sp/>which<sp/>are<sp/>fractions<sp/>can<sp/>be<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref><sp/>=<sp/>Game.Content.Load&lt;SpriteFont&gt;(</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>font<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Camera<sp/>needed<sp/>for<sp/>the<sp/>analysis<sp/>picture<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xposition<sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref><sp/>*<sp/>50<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yposition<sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref><sp/>*<sp/>50<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a96d5f79f1b1a104d2ab3f47aa6616d37" kindref="member" tooltip="Camera used to draw the triangles of what the robot is &amp;quot;thinking&amp;quot;.">camera</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_camera" kindref="compound" tooltip="Represents the camera object/class that contains all the information needed about position and target...">Camera</ref>(Game,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(yposition,<sp/>xposition,<sp/>-590),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(yposition,<sp/>xposition,<sp/>0),<sp/>-Vector3.UnitY,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight><highlight class="comment">//-<sp/>unit<sp/>x<sp/>for<sp/>updirection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Game.Components.Add(<ref refid="class_attempt__7_1_1_draw_image_analysis_1a96d5f79f1b1a104d2ab3f47aa6616d37" kindref="member" tooltip="Camera used to draw the triangles of what the robot is &amp;quot;thinking&amp;quot;.">camera</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a453387b044257078cc5a6b8cb5c736b1" kindref="member" tooltip="A list of the vertexs to draw.">vertexIndex</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref><sp/>*<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref><sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a44ab97b569495bde696945acd9728e68" kindref="member">vertexIndexList</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;short&gt;();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aea47cb9ef13fda648ba3e8acb8808ed3" kindref="member" tooltip="Loads the position of each triangle into the VertexArray.">LoadVertexArray</ref>();<sp/></highlight><highlight class="comment">//<sp/>Loads<sp/>the<sp/>vertexs<sp/>needed<sp/>to<sp/>draw<sp/>the<sp/>analysis<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor[65535];<sp/></highlight><highlight class="comment">//<sp/>The<sp/>vertex<sp/>array<sp/>for<sp/>the<sp/>analysis<sp/>triangles<sp/>,<sp/>the<sp/>largest<sp/>this<sp/>could<sp/>be<sp/>is<sp/>65535<sp/>=<sp/>16<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>65535;<sp/>i++)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(Vector3.UnitX,<sp/>Color.Blue);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.Initialize();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_attempt__7_1_1_draw_image_analysis_1a6de17ba6756456372d8d6e2a69d6ce45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a6de17ba6756456372d8d6e2a69d6ce45" kindref="member" tooltip="Allows the game component to update itself.">Update</ref>(GameTime<sp/>gameTime)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" kindref="member" tooltip="Stores information about the hough.">houghInfo</ref><sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" kindref="member" tooltip="The image analysis object associated with this class.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1a897a0f80fbf65670828c8a1a1db13d97" kindref="member">GetHoughInfo</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a295eefafafe824bfc196c0d7e88f55aa" kindref="member" tooltip="Stores vector3 locations of the beginning and end points of two lines on the screen. Was part of the old Hough system, but potientially still useful, so has not deleted. 0 = start location of line, 1 = end location ofline.">houghLineStartandStopVectors</ref><sp/>=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" kindref="member" tooltip="The image analysis object associated with this class.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1a3c35b4a6a6a1e4464fc79772caa612cf" kindref="member">GetHoughStartandStopVectors</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UpdateBoolMapto3DRectangle(imageAnalysis.GetTrueFalseMaptoDraw(),<sp/>houghInfo);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//UpdateBoolMapto3DRectangleUsingIndex(imageAnalysis.GetTrueFalseMaptoDraw(),<sp/>houghInfo);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a98635843e4766a13a2fa9a73765aeb78" kindref="member">BuildVertexArrayforDrawingSmallerNumberofTriangles</ref>(<ref refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" kindref="member" tooltip="The image analysis object associated with this class.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1a1ba8eee3151c73ef5023003ee7b57b67" kindref="member">GetTrueFalseMaptoDraw</ref>(),<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" kindref="member" tooltip="Stores information about the hough.">houghInfo</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.Update(gameTime);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_attempt__7_1_1_draw_image_analysis_1aacad4429bd67cfff2db2a42056fdef7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1aacad4429bd67cfff2db2a42056fdef7e" kindref="member" tooltip="Takes a 2D color array and colors the triangles. Also adds the hough lines.">UpdateColorArrayto3DRectangle</ref>(Color[,]<sp/>c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" kindref="member" tooltip="Stores information about the hough.">houghInfo</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1afda6ca182d55b530c3188413bfced70c" kindref="member">count1C</ref>;<sp/>x<sp/>&lt;<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>;<sp/>x<sp/>+=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aed235d7846bb2f2ace68331beb4ca7f2" kindref="member">count2C</ref>;<sp/>y<sp/>&lt;<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref>;<sp/>y<sp/>+=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ac921c38d0ea4e068fff70230356a9257" kindref="member" tooltip="VertexPositionColory array that stores the triangles of what the robot is &amp;quot;thinking&amp;quot;. Each triangle represents 1 pixel from the robot&amp;#39;s view. So 640*480 triangles.">vertexArray</ref>[x<sp/>+<sp/>(y<sp/>*<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>)].Color<sp/>=<sp/>c[x,<sp/>y];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1afda6ca182d55b530c3188413bfced70c" kindref="member">count1C</ref>++;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1afda6ca182d55b530c3188413bfced70c" kindref="member">count1C</ref><sp/>==<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1afda6ca182d55b530c3188413bfced70c" kindref="member">count1C</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aed235d7846bb2f2ace68331beb4ca7f2" kindref="member">count2C</ref>++;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1af6ec1c3997ca2f3d14beeb0202b15e58" kindref="member" tooltip="Puts the hough information about the lines in the vertex array.">AddHoughLinesColor</ref>(houghInfo);<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>hough<sp/>lines.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aed235d7846bb2f2ace68331beb4ca7f2" kindref="member">count2C</ref><sp/>==<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aed235d7846bb2f2ace68331beb4ca7f2" kindref="member">count2C</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="class_attempt__7_1_1_draw_image_analysis_1affaba058b8e77f01efcba3f6ded28dea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1affaba058b8e77f01efcba3f6ded28dea" kindref="member" tooltip="Loads the SpriteBatch Content.">LoadContent</ref>()</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.LoadContent();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="class_attempt__7_1_1_draw_image_analysis_1a3405b325467c48533528a5312bbbf08b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a3405b325467c48533528a5312bbbf08b" kindref="member" tooltip="Calls methods to draw the analysis triangles and the Debug text.">Draw</ref>(GameTime<sp/>gameTime)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Game.GraphicsDevice.Viewport<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ab649a91f61c546824edd468642c77fa3" kindref="member" tooltip="List holding the viewports used in the simulation. This list is created in the Main simulation and th...">viewPortList</ref>[1];<sp/></highlight><highlight class="comment">//<sp/>Right<sp/>center<sp/>view<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.DrawAnalysis();<sp/>//<sp/>Draw<sp/>the<sp/>analysis<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.DrawAnalysisUsingIndex();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ab82f803a8226f55b480a102215aac025" kindref="member">drawUsingSmallerNumberofVertexs</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Game.GraphicsDevice.Viewport<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ab649a91f61c546824edd468642c77fa3" kindref="member" tooltip="List holding the viewports used in the simulation. This list is created in the Main simulation and th...">viewPortList</ref>[2];<sp/></highlight><highlight class="comment">//<sp/>Right<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aaf4088bca6ef2e41e13c6a9bf0ca2a52" kindref="member" tooltip="Draws the Text giving important information about the status of the analysis.">DrawText</ref>(<ref refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" kindref="member" tooltip="The image analysis object associated with this class.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1a99c5e65fe48a1145d7c9afba96bfb220" kindref="member" tooltip="Allows the SimulationMain to get the turnIndicator.">GetTurnIndicator</ref>(),<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" kindref="member" tooltip="The image analysis object associated with this class.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1a55b77047aaacc5a78fcd70401da3b069" kindref="member">GetWhiteCount</ref>(),<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" kindref="member" tooltip="Stores information about the hough.">houghInfo</ref>);<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>hough<sp/>text<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.Draw(gameTime);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="class_attempt__7_1_1_draw_image_analysis_1ad0933abc7604eb194143440f1b875383" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1ad0933abc7604eb194143440f1b875383" kindref="member" tooltip="Colors the analysis triangles based a trueFalse bool map. Also adds the Hough information If true the...">UpdateBoolMapto3DRectangle</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[,]<sp/>c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" kindref="member" tooltip="Stores information about the hough.">houghInfo</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0c212b6483e545cdb54b744f26ae5aaf" kindref="member" tooltip="These values are part of the double for loops that reduce the computational requirements. These are the values that are incremented.">count1A</ref>;<sp/>x<sp/>&lt;<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>;<sp/>x<sp/>+=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ab82cc146a1cdfc52336d1ae86eb89157" kindref="member">count2A</ref>;<sp/>y<sp/>&lt;<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref>;<sp/>y<sp/>+=<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c[x,<sp/>y]<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ac921c38d0ea4e068fff70230356a9257" kindref="member" tooltip="VertexPositionColory array that stores the triangles of what the robot is &amp;quot;thinking&amp;quot;. Each triangle represents 1 pixel from the robot&amp;#39;s view. So 640*480 triangles.">vertexArray</ref>[x<sp/>+<sp/>(y<sp/>*<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>)].Color<sp/>=<sp/>Color.White;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ac921c38d0ea4e068fff70230356a9257" kindref="member" tooltip="VertexPositionColory array that stores the triangles of what the robot is &amp;quot;thinking&amp;quot;. Each triangle represents 1 pixel from the robot&amp;#39;s view. So 640*480 triangles.">vertexArray</ref>[x<sp/>+<sp/>(y<sp/>*<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>)].Color<sp/>=<sp/>Color.Transparent;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1af6ec1c3997ca2f3d14beeb0202b15e58" kindref="member" tooltip="Puts the hough information about the lines in the vertex array.">AddHoughLinesColor</ref>(houghInfo);<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>hough<sp/>lines.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0c212b6483e545cdb54b744f26ae5aaf" kindref="member" tooltip="These values are part of the double for loops that reduce the computational requirements. These are the values that are incremented.">count1A</ref>++;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0c212b6483e545cdb54b744f26ae5aaf" kindref="member" tooltip="These values are part of the double for loops that reduce the computational requirements. These are the values that are incremented.">count1A</ref><sp/>==<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0c212b6483e545cdb54b744f26ae5aaf" kindref="member" tooltip="These values are part of the double for loops that reduce the computational requirements. These are the values that are incremented.">count1A</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ab82cc146a1cdfc52336d1ae86eb89157" kindref="member">count2A</ref>++;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ab82cc146a1cdfc52336d1ae86eb89157" kindref="member">count2A</ref><sp/>==<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ab82cc146a1cdfc52336d1ae86eb89157" kindref="member">count2A</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="class_attempt__7_1_1_draw_image_analysis_1a98635843e4766a13a2fa9a73765aeb78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a98635843e4766a13a2fa9a73765aeb78" kindref="member">BuildVertexArrayforDrawingSmallerNumberofTriangles</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[,]<sp/>c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" kindref="member" tooltip="Stores information about the hough.">houghInfo</ref>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2<sp/>=<sp/>new<sp/>VertexPositionColor[imageAnalysis<sp/>.GetWhiteCount<sp/>()*3];<sp/>//<sp/>The<sp/>vertex<sp/>array<sp/>for<sp/>the<sp/>analysis<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref>;<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c[x,<sp/>y]<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((y<sp/>+<sp/>j)<sp/>&lt;<sp/>this.screenHeight<sp/>&amp;&amp;<sp/>c[x,<sp/>y<sp/>+<sp/>j]<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>0].Position<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(x,<sp/>y,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Put<sp/>a<sp/>vertex<sp/>at<sp/>the<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>0].Color<sp/>=<sp/>Color.Blue;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>1].Position<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(x<sp/>+<sp/>3,<sp/>y<sp/>+<sp/>j,<sp/>0);</highlight><highlight class="comment">//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>1].Color<sp/>=<sp/>Color.Blue;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>2].Position<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(x,<sp/>y<sp/>+<sp/>3<sp/>+<sp/>j,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>2].Color<sp/>=<sp/>Color.Blue;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>0]<sp/>=<sp/>new<sp/>VertexPositionColor(new<sp/>Vector3(x,<sp/>y,<sp/>0),<sp/>Color.White);<sp/>//<sp/>Put<sp/>a<sp/>vertex<sp/>at<sp/>the<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>1]<sp/>=<sp/>new<sp/>VertexPositionColor(new<sp/>Vector3(x<sp/>+<sp/>3,<sp/>y<sp/>+<sp/>j,<sp/>0),<sp/>Color.White);<sp/>//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>2]<sp/>=<sp/>new<sp/>VertexPositionColor(new<sp/>Vector3(x,<sp/>y<sp/>+<sp/>3<sp/>+<sp/>j,<sp/>0),<sp/>Color.White);<sp/>//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>j;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y++;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1af6ec1c3997ca2f3d14beeb0202b15e58" kindref="member" tooltip="Puts the hough information about the lines in the vertex array.">AddHoughLinesColor</ref>(houghInfo);<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>hough<sp/>lines.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="class_attempt__7_1_1_draw_image_analysis_1a88d4b6824cb8e0791b6e81053afe02d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a88d4b6824cb8e0791b6e81053afe02d7" kindref="member">UpdateBoolMapto3DRectangleUsingIndex</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[,]<sp/>c,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" kindref="member" tooltip="Stores information about the hough.">houghInfo</ref>)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(int<sp/>x<sp/>=<sp/>this.count1A;<sp/>x<sp/>&lt;<sp/>this.screenWidth;<sp/>x<sp/>+=<sp/>UpdateSquareDimForDrawing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>(int<sp/>y<sp/>=<sp/>this.count2A;<sp/>y<sp/>&lt;<sp/>this.screenHeight;<sp/>y<sp/>+=<sp/>UpdateSquareDimForDrawing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array.Clear(<ref refid="class_attempt__7_1_1_draw_image_analysis_1a453387b044257078cc5a6b8cb5c736b1" kindref="member" tooltip="A list of the vertexs to draw.">vertexIndex</ref>,<sp/>0,<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref>);<sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>array<sp/>of<sp/>index<sp/>information<sp/>before<sp/>starting.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref>;<sp/>y++)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c[x,<sp/>y]<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertexIndex[count1D]<sp/>=<sp/>(short)((x<sp/>*<sp/>this.screenHeight)<sp/>-<sp/>y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertexIndex[count1D<sp/>+<sp/>1]<sp/>=<sp/>(short)((x<sp/>*<sp/>this.screenHeight)<sp/>-<sp/>(y+1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertexIndex[count1D<sp/>+<sp/>2]<sp/>=<sp/>(short)(((x+1)<sp/>*<sp/>this.screenHeight)<sp/>-<sp/>y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>this.vertexArray[x<sp/>+<sp/>(y<sp/>*<sp/>this.screenWidth)].Color<sp/>=<sp/>Color.White<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertexIndex[count1D]<sp/>=<sp/>(short)(x<sp/>+<sp/>(y<sp/>*<sp/>this.screenWidth));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertexIndex[count1D<sp/>+<sp/>1]<sp/>=<sp/>(short)((x<sp/>+<sp/>3)<sp/>+<sp/>(y<sp/>*<sp/>this.screenWidth));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertexIndex[count1D<sp/>+<sp/>2]<sp/>=<sp/>(short)(x<sp/>+<sp/>((y<sp/>+<sp/>3)<sp/>*<sp/>this.screenWidth));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a453387b044257078cc5a6b8cb5c736b1" kindref="member" tooltip="A list of the vertexs to draw.">vertexIndex</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref>]<sp/>=<sp/>(int)(x<sp/>+<sp/>(y<sp/>*<sp/>this.screenWidth));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a453387b044257078cc5a6b8cb5c736b1" kindref="member" tooltip="A list of the vertexs to draw.">vertexIndex</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>1]<sp/>=<sp/>(int)((x<sp/>+<sp/>3)<sp/>+<sp/>(y<sp/>*<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a453387b044257078cc5a6b8cb5c736b1" kindref="member" tooltip="A list of the vertexs to draw.">vertexIndex</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>2]<sp/>=<sp/>(int)(x<sp/>+<sp/>((y<sp/>+<sp/>3)<sp/>*<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>x<sp/>=<sp/>this.screenHeight<sp/>-<sp/>1;<sp/>x<sp/>&gt;<sp/>0;<sp/>x--)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>(int<sp/>y<sp/>=<sp/>this.screenWidth<sp/>-<sp/>1;<sp/>y<sp/>&gt;<sp/>0;<sp/>y<sp/>-=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.vertexArray[(x<sp/>*<sp/>this.screenWidth)<sp/>-<sp/>y]<sp/>=<sp/>new<sp/>VertexPositionColor(new<sp/>Vector3(x,<sp/>y,<sp/>0),<sp/>Color.White);<sp/>//<sp/>Put<sp/>a<sp/>vertex<sp/>at<sp/>the<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.vertexArray[(x<sp/>*<sp/>this.screenWidth)<sp/>-<sp/>(y<sp/>+<sp/>1)]<sp/>=<sp/>new<sp/>VertexPositionColor(new<sp/>Vector3(x<sp/>+<sp/>1,<sp/>y,<sp/>0),<sp/>Color.White);<sp/>//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertexIndexList.Add((short)(x<sp/>+<sp/>(y<sp/>*<sp/>this.screenWidth)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertexIndexList.Add((short)((x<sp/>+<sp/>1)<sp/>+<sp/>(y<sp/>*<sp/>this.screenWidth)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertexIndexList.Add((short)(x<sp/>+<sp/>((y<sp/>+<sp/>1)<sp/>*<sp/>this.screenWidth)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray[x<sp/>+<sp/>(y<sp/>*<sp/>this.screenWidth)].Color<sp/>=<sp/>Color.White;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this.AddHoughLinesColor(houghInfo);<sp/>//<sp/>Add<sp/>the<sp/>hough<sp/>lines.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.count1A++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(this.count1A<sp/>==<sp/>UpdateSquareDimForDrawing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>this.count1A<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>this.count2A++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(this.count2A<sp/>==<sp/>UpdateSquareDimForDrawing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.count2A<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//vertexIndex<sp/>=<sp/>new<sp/>short[screenHeight<sp/>+<sp/>screenWidth<sp/>*<sp/>2];<sp/>//<sp/>Not<sp/>sure<sp/>which<sp/>one<sp/>is<sp/>faster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//vertexIndexList.Clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="class_attempt__7_1_1_draw_image_analysis_1aa1273c30c63d4963aebfede894eec3e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1aa1273c30c63d4963aebfede894eec3e4" kindref="member" tooltip="Updates the vertex information of the triangels for a line of a particular color based off its starti...">InsertLine</ref>(Vector3<sp/>startLocation,<sp/>Vector3<sp/>endLocation,<sp/>Color<sp/>c)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>0].Position<sp/>=<sp/>new<sp/>Vector3((int)(startLocation.X),<sp/>((int)(startLocation.Y)),<sp/>0);<sp/>//<sp/>Put<sp/>a<sp/>vertex<sp/>at<sp/>the<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>0].Color<sp/>=<sp/>c;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>1].Position<sp/>=<sp/>new<sp/>Vector3((int)(startLocation.X)<sp/>+<sp/>10,<sp/>((int)(startLocation.Y)),<sp/>0);//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>1].Color<sp/>=<sp/>c;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>2].Position<sp/>=<sp/>new<sp/>Vector3((int)(endLocation.X),<sp/>((int)(endLocation.Y)),<sp/>0);<sp/>//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>2].Color<sp/>=<sp/>c;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//count1D<sp/>+=<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>0].Position<sp/>=<sp/>new<sp/>Vector3((int)(endLocation.X),<sp/>((int)(endLocation.Y)),<sp/>0);<sp/>//<sp/>Put<sp/>a<sp/>vertex<sp/>at<sp/>the<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>0].Color<sp/>=<sp/>c;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>1].Position<sp/>=<sp/>new<sp/>Vector3((int)(endLocation.X<sp/>+<sp/>10),<sp/>((int)(endLocation.Y)<sp/>+<sp/>10),<sp/>0);//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>1].Color<sp/>=<sp/>c;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>2].Position<sp/>=<sp/>new<sp/>Vector3((int)(startLocation.X),<sp/>((int)(startLocation.Y)),<sp/>0);<sp/>//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>2].Color<sp/>=<sp/>c;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//count1D<sp/>+=<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fifty<sp/>points<sp/>the<sp/>line<sp/>make<sp/>a<sp/>line.new<sp/>Vector3((int)(startLocation.X)<sp/>,<sp/>((int)(startLocation.Y)),<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incrementNumber<sp/>=<sp/>(int)Vector3.Distance(startLocation,<sp/>endLocation)<sp/>/<sp/>10;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>incrementNumber;<sp/>i++)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>each<sp/>points<sp/>location<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>lineLocation1<sp/>=<sp/>Vector3.Lerp(startLocation,<sp/>endLocation,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(i<sp/>*<sp/>1f<sp/>/<sp/>incrementNumber));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>is<sp/>on<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(lineLocation1.X<sp/>&lt;<sp/>this.screenWidth<sp/>&amp;&amp;<sp/>lineLocation1.X<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>lineLocation1.Y<sp/>&lt;<sp/>this.screenHeight<sp/>&amp;&amp;<sp/>lineLocation1.Y<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>Make<sp/>the<sp/>point<sp/>5<sp/>wide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>0].Position<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(lineLocation1.X),<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(lineLocation1.Y)),<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Put<sp/>a<sp/>vertex<sp/>at<sp/>the<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>0].Color<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>1].Position<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(lineLocation1.X)<sp/>+<sp/>10,<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(lineLocation1.Y)),<sp/>0);</highlight><highlight class="comment">//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>1].Color<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>2].Position<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(lineLocation1.X),<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(lineLocation1.Y)<sp/>+<sp/>10),<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>[<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+<sp/>2].Color<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>0]<sp/>=<sp/>new<sp/>VertexPositionColor(new<sp/>Vector3((int)(lineLocation1.X<sp/>+<sp/>k),<sp/>((int)(lineLocation1.Y<sp/>+<sp/>j)),<sp/>0),<sp/>c);<sp/>//<sp/>Put<sp/>a<sp/>vertex<sp/>at<sp/>the<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>1]<sp/>=<sp/>new<sp/>VertexPositionColor(new<sp/>Vector3((int)(lineLocation1.X<sp/>+<sp/>k)<sp/>+<sp/>3,<sp/>((int)(lineLocation1.Y<sp/>+<sp/>j)),<sp/>0),<sp/>c);<sp/>//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this.vertexArray2[count1D<sp/>+<sp/>2]<sp/>=<sp/>new<sp/>VertexPositionColor(new<sp/>Vector3((int)(lineLocation1.X<sp/>+<sp/>k),<sp/>((int)(lineLocation1.Y<sp/>+<sp/>j)<sp/>+<sp/>3),<sp/>0),c);<sp/>//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>point<sp/>is<sp/>on<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>((int)(lineLocation1.X<sp/>+<sp/>k)<sp/>+<sp/>((int)(lineLocation1.Y<sp/>+<sp/>j)<sp/>*<sp/>this.screenWidth)<sp/>&lt;<sp/>vertexArray.Length<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int)(lineLocation1.X<sp/>+<sp/>k)<sp/>+<sp/>((int)(lineLocation1.Y<sp/>+<sp/>j)<sp/>*<sp/>this.screenWidth))<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>this.vertexArray[(int)(lineLocation1.X<sp/>+<sp/>k)<sp/>+<sp/>((int)(lineLocation1.Y<sp/>+<sp/>j)<sp/>*<sp/>this.screenWidth)].Color<sp/>=<sp/>c;<sp/>//<sp/>Change<sp/>the<sp/>point<sp/>to<sp/>the<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="class_attempt__7_1_1_draw_image_analysis_1af6ec1c3997ca2f3d14beeb0202b15e58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1af6ec1c3997ca2f3d14beeb0202b15e58" kindref="member" tooltip="Puts the hough information about the lines in the vertex array.">AddHoughLinesColor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" kindref="member" tooltip="Stores information about the hough.">houghInfo</ref>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>line<sp/>found<sp/>will<sp/>be<sp/>the<sp/>darkest.<sp/>The<sp/>last<sp/>line<sp/>found<sp/>will<sp/>be<sp/>the<sp/>lightest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colorInc<sp/>=<sp/>(255<sp/>-<sp/>0)<sp/>/<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a2e2dcb54db7f1ebeac6be4cf3b6d7aed" kindref="member" tooltip="How many lines to find.">NumberofLinesToFind</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NumberofLinesToFind;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>xprime<sp/>=<sp/>(int)(houghInfo[(4)<sp/>+<sp/>(i<sp/>*<sp/>7)]<sp/>+<sp/>(this.screenWidth<sp/>/<sp/>2));<sp/>//<sp/>In<sp/>screen<sp/>cordinates<sp/>with<sp/>origin<sp/>in<sp/>the<sp/>top<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>yprime<sp/>=<sp/>(int)(-houghInfo[(5)<sp/>+<sp/>(i<sp/>*<sp/>7)]<sp/>+<sp/>this.screenHeight);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>this.InsertLine(new<sp/>Vector3((int)this.screenWidth<sp/>/<sp/>2,<sp/>(int)this.screenHeight,<sp/>0),<sp/>new<sp/>Vector3(xprime,<sp/>yprime,<sp/>0),<sp/>new<sp/>Color(0,<sp/>0<sp/>+<sp/>(i<sp/>*<sp/>colorInc),<sp/>0<sp/>+<sp/>(i<sp/>*<sp/>colorInc),<sp/>255<sp/>-<sp/>(i<sp/>*<sp/>colorInc)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a2e2dcb54db7f1ebeac6be4cf3b6d7aed" kindref="member" tooltip="How many lines to find.">NumberofLinesToFind</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa1273c30c63d4963aebfede894eec3e4" kindref="member" tooltip="Updates the vertex information of the triangels for a line of a particular color based off its starti...">InsertLine</ref>(<ref refid="class_attempt__7_1_1_draw_image_analysis_1a295eefafafe824bfc196c0d7e88f55aa" kindref="member" tooltip="Stores vector3 locations of the beginning and end points of two lines on the screen. Was part of the old Hough system, but potientially still useful, so has not deleted. 0 = start location of line, 1 = end location ofline.">houghLineStartandStopVectors</ref>[i<sp/>*<sp/>2],<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a295eefafafe824bfc196c0d7e88f55aa" kindref="member" tooltip="Stores vector3 locations of the beginning and end points of two lines on the screen. Was part of the old Hough system, but potientially still useful, so has not deleted. 0 = start location of line, 1 = end location ofline.">houghLineStartandStopVectors</ref>[1<sp/>+<sp/>(i<sp/>*<sp/>2)],<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color(255<sp/>-<sp/>(i<sp/>*<sp/>colorInc),<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="class_attempt__7_1_1_draw_image_analysis_1a065696d0fbab0244c164284ff296cbc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a065696d0fbab0244c164284ff296cbc5" kindref="member" tooltip="Draws the Analysis Triangles stored in the &amp;#39;vertexArray&amp;#39;.">DrawAnalysis</ref>()</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(EffectPass<sp/>pass<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a36779d384eaa0c4188a16758540403e0" kindref="member" tooltip="BasicEffects for how to draw the triangles.">basicEffects</ref>.CurrentTechnique.Passes)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass.Apply();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GraphicsDevice.DrawUserPrimitives&lt;VertexPositionColor&gt;(PrimitiveType.TriangleStrip,<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ac921c38d0ea4e068fff70230356a9257" kindref="member" tooltip="VertexPositionColory array that stores the triangles of what the robot is &amp;quot;thinking&amp;quot;. Each triangle represents 1 pixel from the robot&amp;#39;s view. So 640*480 triangles.">vertexArray</ref>,<sp/>0,<sp/>(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref><sp/>*<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>)<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="class_attempt__7_1_1_draw_image_analysis_1abb4b21e7bad04bbbbb60b1c997827543" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1abb4b21e7bad04bbbbb60b1c997827543" kindref="member" tooltip="Draws the Analysis Triangles stored in the &amp;#39;vertexArray&amp;#39;.">DrawAnalysisUsingIndex</ref>()</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(EffectPass<sp/>pass<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a36779d384eaa0c4188a16758540403e0" kindref="member" tooltip="BasicEffects for how to draw the triangles.">basicEffects</ref>.CurrentTechnique.Passes)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass.Apply();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GraphicsDevice.DrawUserPrimitives&lt;VertexPositionColor&gt;(PrimitiveType.TriangleStrip,<sp/>this.vertexArray,<sp/>0,<sp/>(this.screenHeight<sp/>*<sp/>this.screenWidth)<sp/>-<sp/>2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GraphicsDevice.DrawUserIndexedPrimitives&lt;VertexPositionColor&gt;(PrimitiveType.TriangleList,<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ac921c38d0ea4e068fff70230356a9257" kindref="member" tooltip="VertexPositionColory array that stores the triangles of what the robot is &amp;quot;thinking&amp;quot;. Each triangle represents 1 pixel from the robot&amp;#39;s view. So 640*480 triangles.">vertexArray</ref>,<sp/>0,<sp/>((this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref><sp/>*<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>)<sp/>-<sp/>2),<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a453387b044257078cc5a6b8cb5c736b1" kindref="member" tooltip="A list of the vertexs to draw.">vertexIndex</ref>,<sp/>0,<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GraphicsDevice.DrawUserIndexedPrimitives&lt;VertexPositionColor&gt;(PrimitiveType.TriangleList,<sp/>this.vertexArray,<sp/>0,<sp/>vertexIndexList.Count,<sp/>vertexIndexList.ToArray&lt;short&gt;(),<sp/>0,<sp/>vertexIndexList.Count);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="class_attempt__7_1_1_draw_image_analysis_1ab82f803a8226f55b480a102215aac025" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1ab82f803a8226f55b480a102215aac025" kindref="member">drawUsingSmallerNumberofVertexs</ref>()</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(EffectPass<sp/>pass<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a36779d384eaa0c4188a16758540403e0" kindref="member" tooltip="BasicEffects for how to draw the triangles.">basicEffects</ref>.CurrentTechnique.Passes)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass.Apply();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GraphicsDevice.DrawUserPrimitives&lt;VertexPositionColor&gt;(PrimitiveType.TriangleList,<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1aa7d53807833a1337862f7fd8f17f0aa7" kindref="member">vertexArray2</ref>,<sp/>0,<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref><sp/>/<sp/>3);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="class_attempt__7_1_1_draw_image_analysis_1aaf4088bca6ef2e41e13c6a9bf0ca2a52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1aaf4088bca6ef2e41e13c6a9bf0ca2a52" kindref="member" tooltip="Draws the Text giving important information about the status of the analysis.">DrawText</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>turnIndication,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalWhiteCnt,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[]<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a29f389c1637b758aea8700cc3b4d8c92" kindref="member" tooltip="Stores information about the hough.">houghInfo</ref>)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spacing<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.Begin();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;slope&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>0),<sp/>Color.White);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;yintercept&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>1),<sp/>Color.White);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rho&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>2),<sp/>Color.White);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;theta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>3),<sp/>Color.White);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;x1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>4),<sp/>Color.White);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;y1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>5),<sp/>Color.White);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;BinSize&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>6),<sp/>Color.White);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Theta<sp/>Increment<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a56819c40d9d3d8898dee1ab7b7f1720b" kindref="member" tooltip="How precise the hough transform is. How large between possible values.">ThetaIncrement</ref>.ToString(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>7),<sp/>Color.White);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rho<sp/>Increment<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0783fd297ddd176a784cb49f70833e18" kindref="member">RhoIncrement</ref>.ToString(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>8),<sp/>Color.White);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;update<sp/>speed<sp/>for<sp/>drawing<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Math.Pow(<ref refid="class_attempt__7_1_1_draw_image_analysis_1a99b0bebc91f29a61b067739a0a5cdb58" kindref="member" tooltip="The dimensions of the double for loops.">UpdateSquareDimForDrawing</ref>,<sp/>2).ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>update<sp/>speed<sp/>for<sp/>analysis<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Math.Pow(<ref refid="class_attempt__7_1_1_draw_image_analysis_1a39cdb07a4e1cbdf5ebef0c53e9af6c94" kindref="member">UpdateSquareDimForAnalysis</ref>,<sp/>2).ToString(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>9),<sp/>Color.White);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Turn<sp/>Indicator<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>turnIndication.ToString(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>10),<sp/>Color.White);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;White<sp/>Count<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>totalWhiteCnt.ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Vertexs<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a0978bfdff294a91bc2c99d55c29a9e2f" kindref="member" tooltip="Other count usage. 1D = the number of vertexs to draw. So the number of triangels will be 1/3 this nu...">count1D</ref>.ToString(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>11),<sp/>Color.White);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>Of<sp/>lines<sp/>To<sp/>find<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a2e2dcb54db7f1ebeac6be4cf3b6d7aed" kindref="member" tooltip="How many lines to find.">NumberofLinesToFind</ref>.ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/><sp/>theta<sp/>Average<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>houghInfo[((<ref refid="class_attempt__7_1_1_draw_image_analysis_1a2e2dcb54db7f1ebeac6be4cf3b6d7aed" kindref="member" tooltip="How many lines to find.">NumberofLinesToFind</ref><sp/>*<sp/>7))].ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>-<sp/>rho<sp/>Average<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>houghInfo[((<ref refid="class_attempt__7_1_1_draw_image_analysis_1a2e2dcb54db7f1ebeac6be4cf3b6d7aed" kindref="member" tooltip="How many lines to find.">NumberofLinesToFind</ref><sp/>*<sp/>7))<sp/>+<sp/>1].ToString(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>12),<sp/>Color.White);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Old<sp/>Hough<sp/>singualarites<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" kindref="member" tooltip="The image analysis object associated with this class.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1a8b8e7e705c97bbb5da1300c139ec0f36" kindref="member">GetSingularitesOldHough</ref>(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>13),<sp/>Color.White);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;New<sp/>Hough<sp/>singualarites<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" kindref="member" tooltip="The image analysis object associated with this class.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1a23adf47c39e8990ae161dd46dcb43846" kindref="member">GetSingularitiesNewHough</ref>(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>14),<sp/>Color.White);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Hough<sp/>Mode<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a111f5f187dc4143d67b30d98031d0968" kindref="member" tooltip="The image analysis object associated with this class.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1ae14af27b7aaa3d4a1006af2a56ab14d1" kindref="member" tooltip="Gets the Hough mode. 0 = Old, 1 = New.">GetHoughMode</ref>(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>spacing<sp/>*<sp/>15),<sp/>Color.White);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spacingForText<sp/>=<sp/>(GraphicsDevice.Viewport.Width<sp/>-<sp/>50)<sp/>/<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a2e2dcb54db7f1ebeac6be4cf3b6d7aed" kindref="member" tooltip="How many lines to find.">NumberofLinesToFind</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>the<sp/>hough<sp/>data<sp/>for<sp/>each<sp/>line.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1a2e2dcb54db7f1ebeac6be4cf3b6d7aed" kindref="member" tooltip="How many lines to find.">NumberofLinesToFind</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>7;<sp/>i++)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a531efa4688cdabd3c3bf99a5f1777d9c" kindref="member" tooltip="Font to use for drawing the debug/hough information.">arial</ref>,<sp/>houghInfo[(j<sp/>*<sp/>7)<sp/>+<sp/>i].ToString(),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(50<sp/>+<sp/>(spacingForText<sp/>*<sp/>j),<sp/>i<sp/>*<sp/>spacing),<sp/>Color.White);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a76002b58f1c462ae159251486137f677" kindref="member" tooltip="The spriteBatch is used to draw 2D graphics.">spriteBatch</ref>.End();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="class_attempt__7_1_1_draw_image_analysis_1aea47cb9ef13fda648ba3e8acb8808ed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_draw_image_analysis_1aea47cb9ef13fda648ba3e8acb8808ed3" kindref="member" tooltip="Loads the position of each triangle into the VertexArray.">LoadVertexArray</ref>()</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ac921c38d0ea4e068fff70230356a9257" kindref="member" tooltip="VertexPositionColory array that stores the triangles of what the robot is &amp;quot;thinking&amp;quot;. Each triangle represents 1 pixel from the robot&amp;#39;s view. So 640*480 triangles.">vertexArray</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor[(this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref><sp/>*<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref>)<sp/>+<sp/>5];<sp/></highlight><highlight class="comment">//<sp/>The<sp/>vertex<sp/>array<sp/>for<sp/>the<sp/>analysis<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a6c238510c027ef883dec2ff739a3e2b3" kindref="member">screenHeight</ref><sp/>-<sp/>1;<sp/>x<sp/>&gt;<sp/>0;<sp/>x--)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref><sp/>-<sp/>1;<sp/>y<sp/>&gt;<sp/>0;<sp/>y<sp/>-=<sp/>2)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ac921c38d0ea4e068fff70230356a9257" kindref="member" tooltip="VertexPositionColory array that stores the triangles of what the robot is &amp;quot;thinking&amp;quot;. Each triangle represents 1 pixel from the robot&amp;#39;s view. So 640*480 triangles.">vertexArray</ref>[(x<sp/>*<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>)<sp/>-<sp/>y]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(x,<sp/>y,<sp/>0),<sp/>Color.White);<sp/></highlight><highlight class="comment">//<sp/>Put<sp/>a<sp/>vertex<sp/>at<sp/>the<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1ac921c38d0ea4e068fff70230356a9257" kindref="member" tooltip="VertexPositionColory array that stores the triangles of what the robot is &amp;quot;thinking&amp;quot;. Each triangle represents 1 pixel from the robot&amp;#39;s view. So 640*480 triangles.">vertexArray</ref>[(x<sp/>*<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1adfb22307c8f2e999485d67b74fe64615" kindref="member" tooltip="The screenSize.">screenWidth</ref>)<sp/>-<sp/>(y<sp/>+<sp/>1)]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(x<sp/>+<sp/>1,<sp/>y,<sp/>0),<sp/>Color.White);<sp/></highlight><highlight class="comment">//<sp/>Put<sp/>another<sp/>vertex<sp/>a<sp/>the<sp/>position<sp/>but<sp/>+1<sp/>in<sp/>the<sp/>X<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>basic<sp/>effect.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a36779d384eaa0c4188a16758540403e0" kindref="member" tooltip="BasicEffects for how to draw the triangles.">basicEffects</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BasicEffect(Game.GraphicsDevice);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a36779d384eaa0c4188a16758540403e0" kindref="member" tooltip="BasicEffects for how to draw the triangles.">basicEffects</ref>.TextureEnabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a36779d384eaa0c4188a16758540403e0" kindref="member" tooltip="BasicEffects for how to draw the triangles.">basicEffects</ref>.VertexColorEnabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a36779d384eaa0c4188a16758540403e0" kindref="member" tooltip="BasicEffects for how to draw the triangles.">basicEffects</ref>.World<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a96d5f79f1b1a104d2ab3f47aa6616d37" kindref="member" tooltip="Camera used to draw the triangles of what the robot is &amp;quot;thinking&amp;quot;.">camera</ref>.<ref refid="class_attempt__7_1_1_camera_1a3bc8d53e4d9b029bb75f8f0e7b09cc17" kindref="member" tooltip="Matrix representing how the real world cordinates differ from that of the rendering by the camera...">World</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a36779d384eaa0c4188a16758540403e0" kindref="member" tooltip="BasicEffects for how to draw the triangles.">basicEffects</ref>.View<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a96d5f79f1b1a104d2ab3f47aa6616d37" kindref="member" tooltip="Camera used to draw the triangles of what the robot is &amp;quot;thinking&amp;quot;.">camera</ref>.<ref refid="class_attempt__7_1_1_camera_1ab58715b7ebc0eb1b0181638331e7fe04" kindref="member" tooltip="Matrix representation of the view determined by the position, target, and updirection.">View</ref>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a36779d384eaa0c4188a16758540403e0" kindref="member" tooltip="BasicEffects for how to draw the triangles.">basicEffects</ref>.Projection<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_draw_image_analysis_1a96d5f79f1b1a104d2ab3f47aa6616d37" kindref="member" tooltip="Camera used to draw the triangles of what the robot is &amp;quot;thinking&amp;quot;.">camera</ref>.<ref refid="class_attempt__7_1_1_camera_1afad745cd526a8c616843da8464a4d256" kindref="member" tooltip="Matrix representation of the view determined by the angle of the field of view (Pi/4), aspectRatio, nearest plane visible (1), and farthest plane visible (1200)">Projection</ref>;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Anthony/Dropbox/Senior Project/attempt 7/attempt 7/attempt 7/DrawImageAnalysis2.cs"/>
  </compounddef>
</doxygen>
