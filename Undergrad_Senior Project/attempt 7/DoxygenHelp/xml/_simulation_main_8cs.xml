<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.3">
  <compounddef id="_simulation_main_8cs" kind="file">
    <compoundname>SimulationMain.cs</compoundname>
    <innerclass refid="class_attempt__7_1_1_simulation_main" prot="public">Attempt_7::SimulationMain</innerclass>
    <innernamespace refid="namespace_attempt__7">Attempt_7</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;copyright<sp/>file=&quot;SimulationMain.cs&quot;<sp/>company=&quot;Anthony&quot;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Produced<sp/>to<sp/>simulate<sp/>the<sp/>Bob<sp/>Jones<sp/>University<sp/>Enginering<sp/>Department&apos;s<sp/>IGVC<sp/>robot.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/copyright&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Attempt_7</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Diagnostics;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.IO;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Timers;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Audio;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Content;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.GamerServices;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Graphics;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Input;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Media;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25" refid="class_attempt__7_1_1_simulation_main" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_attempt__7_1_1_simulation_main" kindref="compound" tooltip="This is the main type for the Simulation.">SimulationMain</ref><sp/>:<sp/>Microsoft.Xna.Framework.Game</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30" refid="class_attempt__7_1_1_simulation_main_1ad2efa87410eaca1dbf09c6424b9b31fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>GraphicsDeviceManager<sp/><ref refid="class_attempt__7_1_1_simulation_main_1ad2efa87410eaca1dbf09c6424b9b31fc" kindref="member" tooltip="GPU manager.">graphics</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_attempt__7_1_1_simulation_main_1aab4721054890276bdd393bf33731eb88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector2<sp/><ref refid="class_attempt__7_1_1_simulation_main_1aab4721054890276bdd393bf33731eb88" kindref="member" tooltip="2D vector representing the resolution of the cameras used in the simulation.">screenSize</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(640,<sp/>480);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_attempt__7_1_1_simulation_main_1aa4011cd0b15cc12416022b1cdec378ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Rectangle<sp/><ref refid="class_attempt__7_1_1_simulation_main_1aa4011cd0b15cc12416022b1cdec378ea" kindref="member" tooltip="Rectangle object that is the size of the camera resolution (screenSize).">screenRectangle</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rectangle(0,<sp/>0,<sp/>640,<sp/>480);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_attempt__7_1_1_simulation_main_1a74fa7cc4615b22ab00abfdab65d75e59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector2<sp/><ref refid="class_attempt__7_1_1_simulation_main_1a74fa7cc4615b22ab00abfdab65d75e59" kindref="member" tooltip="2D vector represeting the size of the Window&amp;#39;s Window that the simulation will run in...">windowSize</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(1000,<sp/>780);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>SpriteBatch<sp/><ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_attempt__7_1_1_simulation_main_1aab081a6e01f2778738692ef5cdecfed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Texture2D<sp/><ref refid="class_attempt__7_1_1_simulation_main_1aab081a6e01f2778738692ef5cdecfed3" kindref="member" tooltip="Represents the texture of the grass bitmap that is used to represent the grass.">grass</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_attempt__7_1_1_simulation_main_1a6d8a090dc3732924bc787fe73cd09657" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Texture2D<sp/><ref refid="class_attempt__7_1_1_simulation_main_1a6d8a090dc3732924bc787fe73cd09657" kindref="member" tooltip="A large tiled version of the grass Texture.">largeGrass</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>BasicEffect<sp/><ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_attempt__7_1_1_simulation_main_1acdfd2380fdb8526a45e083f23b8d570b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>VertexPositionColor[]<sp/><ref refid="class_attempt__7_1_1_simulation_main_1acdfd2380fdb8526a45e083f23b8d570b" kindref="member" tooltip="The vertexPositionColor array holding the vertex information needed for drawing the white lines repre...">verts1</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_attempt__7_1_1_simulation_main_1a8c77e7d93e5e69fb14c1a36188e39a02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>VertexPositionTexture[]<sp/><ref refid="class_attempt__7_1_1_simulation_main_1a8c77e7d93e5e69fb14c1a36188e39a02" kindref="member" tooltip="The vertexPositionColor array holding the information for the grass/ground.">verts2</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_attempt__7_1_1_simulation_main_1a825a374a50b64f52d5c990b999ac7555" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>VertexPositionColor[]<sp/><ref refid="class_attempt__7_1_1_simulation_main_1a825a374a50b64f52d5c990b999ac7555" kindref="member" tooltip="The vertexPositionColor Array holding the information needed for the 3D representation of the robot...">verts3</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_attempt__7_1_1_simulation_main_1a65d06e9d2b30625630083b7526fa4dd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;Viewport&gt;<sp/><ref refid="class_attempt__7_1_1_simulation_main_1a65d06e9d2b30625630083b7526fa4dd3" kindref="member" tooltip="List holding the viewports used in the simulation.">viewPortList</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_attempt__7_1_1_simulation_main_1a3b904d65677046e391d59846d2f1a8b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a3b904d65677046e391d59846d2f1a8b9" kindref="member" tooltip="Bool representing if the main Camera moves its view to follow the robot.">trackRobot</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_attempt__7_1_1_simulation_main_1ada7b29bc97491449c6cf58b58b7f82cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1ada7b29bc97491449c6cf58b58b7f82cc" kindref="member" tooltip="Time in totalmillseconds when F1, F2, or F3 were pushed.">timePressedKey</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_attempt__7_1_1_simulation_main_1ac193bee1fac89d0148938ab528684f89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>SpriteFont<sp/><ref refid="class_attempt__7_1_1_simulation_main_1ac193bee1fac89d0148938ab528684f89" kindref="member" tooltip="The 2D font object needed to show text. Size = 20.">arialLarge</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_attempt__7_1_1_simulation_main_1a9c44b03ea24459de3117b705612a4b65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>SpriteFont<sp/><ref refid="class_attempt__7_1_1_simulation_main_1a9c44b03ea24459de3117b705612a4b65" kindref="member" tooltip="A smaller font of arial to show debug information.">arialSmall</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_attempt__7_1_1_simulation_main_1ae9fff7ad9450d2b1c783a8867d386031" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Random<sp/><ref refid="class_attempt__7_1_1_simulation_main_1ae9fff7ad9450d2b1c783a8867d386031" kindref="member" tooltip="Represents a random object so that random numbers can be generated.">rand</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_attempt__7_1_1_simulation_main_1a80810188dd0ef0a7422d0594ce3b7eca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot" kindref="compound">Robot</ref><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a80810188dd0ef0a7422d0594ce3b7eca" kindref="member" tooltip="The robot object. See the robot class for more information.">robot1</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_attempt__7_1_1_simulation_main_1a3b83a138c458ab76ad38722ba6cced5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;Camera&gt;<sp/><ref refid="class_attempt__7_1_1_simulation_main_1a3b83a138c458ab76ad38722ba6cced5a" kindref="member" tooltip="A list of the cameras. There are 2, The mainview and the robot view. WorldView Camera = 0 (The main c...">cameraList</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_attempt__7_1_1_simulation_main_1abb56a338488e1b56bb87162cd8405c8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>List&lt;RenderTarget2D&gt;<sp/><ref refid="class_attempt__7_1_1_simulation_main_1abb56a338488e1b56bb87162cd8405c8f" kindref="member" tooltip="A list of the rendertargets. Rather than rendering to the screen, the image produced by the GPU is sa...">renderTargets</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_attempt__7_1_1_simulation_main_1a9f9ea12c0d811d9bcd5f933adb3d75f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_image_analysis" kindref="compound" tooltip="It was easier to redure 640*480 small triangles and view then from a distance than to put a texture o...">ImageAnalysis</ref><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a9f9ea12c0d811d9bcd5f933adb3d75f3" kindref="member" tooltip="The image analysis object/class does the image processing.">imageAnalysis</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_attempt__7_1_1_simulation_main_1a9ea5edf642dc80c782aa35f4a4ba4107" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a9ea5edf642dc80c782aa35f4a4ba4107" kindref="member">SimulationMain</ref>()</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1ad2efa87410eaca1dbf09c6424b9b31fc" kindref="member" tooltip="GPU manager.">graphics</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GraphicsDeviceManager(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Content.RootDirectory<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Content&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_attempt__7_1_1_simulation_main_1a87038950391e39711d316d5a73d8768f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a87038950391e39711d316d5a73d8768f" kindref="member" tooltip="Initialize the Simulation Object.">Initialize</ref>()</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1ad2efa87410eaca1dbf09c6424b9b31fc" kindref="member" tooltip="GPU manager.">graphics</ref>.PreferredBackBufferWidth<sp/>=<sp/>(int)this.<ref refid="class_attempt__7_1_1_simulation_main_1a74fa7cc4615b22ab00abfdab65d75e59" kindref="member" tooltip="2D vector represeting the size of the Window&amp;#39;s Window that the simulation will run in...">windowSize</ref>.X;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>window<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.graphics.PreferredBackBufferHeight<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)this.<ref refid="class_attempt__7_1_1_simulation_main_1a74fa7cc4615b22ab00abfdab65d75e59" kindref="member" tooltip="2D vector represeting the size of the Window&amp;#39;s Window that the simulation will run in...">windowSize</ref>.Y;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1ad2efa87410eaca1dbf09c6424b9b31fc" kindref="member" tooltip="GPU manager.">graphics</ref>.IsFullScreen<sp/>=<sp/>false<sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>full<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1ad2efa87410eaca1dbf09c6424b9b31fc" kindref="member" tooltip="GPU manager.">graphics</ref>.ApplyChanges();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window.Title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Robot<sp/>simulation1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsMouseVisible<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1aabe2d52bb2b34aeeff6a5d8c98512ef6" kindref="member" tooltip="Creates the 5 view ports. View ports are like windows inside of a Window&amp;#39;s window. MainPort = 0  TopRight = 1 CenterRight = 2 BottomRight = 3 BottomLeft = 4 BottomCenter = 5 ">CreateViewPorts</ref>();<sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>the<sp/>viewports<sp/>at<sp/>startup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a3b83a138c458ab76ad38722ba6cced5a" kindref="member" tooltip="A list of the cameras. There are 2, The mainview and the robot view. WorldView Camera = 0 (The main c...">cameraList</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Camera&gt;();<sp/></highlight><highlight class="comment">//<sp/>List<sp/>to<sp/>insert<sp/>the<sp/>cameras.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>camera<sp/>component<sp/>that<sp/>is<sp/>controlled<sp/>by<sp/>mouse<sp/>position<sp/>-<sp/>this<sp/>is<sp/>the<sp/>main<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_camera" kindref="compound" tooltip="Represents the camera object/class that contains all the information needed about position and target...">Camera</ref><sp/>cameraWorldView<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_camera" kindref="compound" tooltip="Represents the camera object/class that contains all the information needed about position and target...">Camera</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(-40,<sp/>-30,<sp/>20),<sp/>Vector3.Zero,<sp/>Vector3.UnitZ,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Components.Add(cameraWorldView);<sp/></highlight><highlight class="comment">//<sp/>Updates<sp/>will<sp/>now<sp/>sync<sp/>with<sp/>the<sp/>game<sp/>and<sp/>the<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a3b83a138c458ab76ad38722ba6cced5a" kindref="member" tooltip="A list of the cameras. There are 2, The mainview and the robot view. WorldView Camera = 0 (The main c...">cameraList</ref>.Add(cameraWorldView);<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>it<sp/>to<sp/>our<sp/>list<sp/>of<sp/>cameras<sp/>to<sp/>render<sp/>from;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>camera<sp/>for<sp/>the<sp/>robot.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a80810188dd0ef0a7422d0594ce3b7eca" kindref="member" tooltip="The robot object. See the robot class for more information.">robot1</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot" kindref="compound">Robot</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>10.5f,<sp/>0),<sp/>Vector3.UnitY,<sp/>0.03f,<sp/>1.8f,<sp/>1);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Components.Add(this.<ref refid="class_attempt__7_1_1_simulation_main_1a80810188dd0ef0a7422d0594ce3b7eca" kindref="member" tooltip="The robot object. See the robot class for more information.">robot1</ref>);<sp/></highlight><highlight class="comment">//<sp/>Updates<sp/>will<sp/>now<sp/>sync<sp/>with<sp/>the<sp/>game<sp/>and<sp/>the<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a3b83a138c458ab76ad38722ba6cced5a" kindref="member" tooltip="A list of the cameras. There are 2, The mainview and the robot view. WorldView Camera = 0 (The main c...">cameraList</ref>.Add(this.<ref refid="class_attempt__7_1_1_simulation_main_1a80810188dd0ef0a7422d0594ce3b7eca" kindref="member" tooltip="The robot object. See the robot class for more information.">robot1</ref>.<ref refid="class_attempt__7_1_1_robot_1aeda683933e67246b4e3758d8bdd250c3" kindref="member" tooltip="Gets the camera/view that the robot&amp;#39;s camera sees.">GetRobotCamera</ref>());<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>robot<sp/>camera<sp/>to<sp/>a<sp/>list<sp/>of<sp/>cameras<sp/>to<sp/>draw<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>an<sp/>image<sp/>analysis<sp/>object<sp/>so<sp/>we<sp/>can<sp/>do<sp/>calculations<sp/>on<sp/>the<sp/>robot&apos;s<sp/>view.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a9f9ea12c0d811d9bcd5f933adb3d75f3" kindref="member" tooltip="The image analysis object/class does the image processing.">imageAnalysis</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_image_analysis" kindref="compound" tooltip="It was easier to redure 640*480 small triangles and view then from a distance than to put a texture o...">ImageAnalysis</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1aab4721054890276bdd393bf33731eb88" kindref="member" tooltip="2D vector representing the resolution of the cameras used in the simulation.">screenSize</ref>,<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a65d06e9d2b30625630083b7526fa4dd3" kindref="member" tooltip="List holding the viewports used in the simulation.">viewPortList</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Components.Add(this.<ref refid="class_attempt__7_1_1_simulation_main_1a9f9ea12c0d811d9bcd5f933adb3d75f3" kindref="member" tooltip="The image analysis object/class does the image processing.">imageAnalysis</ref>);<sp/></highlight><highlight class="comment">//<sp/>Updates<sp/>will<sp/>now<sp/>sync<sp/>with<sp/>the<sp/>game<sp/>and<sp/>the<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1ae9fff7ad9450d2b1c783a8867d386031" kindref="member" tooltip="Represents a random object so that random numbers can be generated.">rand</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Random();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.Initialize();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_attempt__7_1_1_simulation_main_1afe27d46d9e2775dfb04d6397b700baeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1afe27d46d9e2775dfb04d6397b700baeb" kindref="member" tooltip="Called after initialize. Loads the textures and calls methods to create the simulated enviroment...">LoadContent</ref>()<sp/></highlight><highlight class="comment">//<sp/>3rd<sp/>method<sp/>called<sp/>at<sp/>start<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SpriteBatch(GraphicsDevice);<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>new<sp/>SpriteBatch,<sp/>which<sp/>can<sp/>be<sp/>used<sp/>to<sp/>draw<sp/>textures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1ac193bee1fac89d0148938ab528684f89" kindref="member" tooltip="The 2D font object needed to show text. Size = 20.">arialLarge</ref><sp/>=<sp/>Content.Load&lt;SpriteFont&gt;(</highlight><highlight class="stringliteral">&quot;ArialLarge&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a9c44b03ea24459de3117b705612a4b65" kindref="member" tooltip="A smaller font of arial to show debug information.">arialSmall</ref><sp/>=<sp/>Content.Load&lt;SpriteFont&gt;(</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1aab081a6e01f2778738692ef5cdecfed3" kindref="member" tooltip="Represents the texture of the grass bitmap that is used to represent the grass.">grass</ref><sp/>=<sp/>Content.Load&lt;Texture2D&gt;(</highlight><highlight class="stringliteral">&quot;grass11&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>grass<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a6d8a090dc3732924bc787fe73cd09657" kindref="member" tooltip="A large tiled version of the grass Texture.">largeGrass</ref><sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a931a8a86dead3b0cb29f28453cf4f6f0" kindref="member" tooltip="Takes a texture and returns a larger texture. Size of the new texture is 1024,1024.">CreateGrassTexture</ref>(this.grass);<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>big<sp/>grass<sp/>texture<sp/>that<sp/>is<sp/>a<sp/>tile<sp/>of<sp/>the<sp/>small<sp/>grass<sp/>texture.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>vertex<sp/>arrays<sp/>for<sp/>the<sp/>lines,<sp/>ground,<sp/>and<sp/>robot.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a376590da39458ac9580001ca9fc1a036" kindref="member" tooltip="Creates the vertexPositionColor array &amp;quot;verts1&amp;quot; that is used to draw the white lines...">LoadLines</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1ad5cec97af179a424e2fd705ad82fc6bc" kindref="member" tooltip="Create vertex data for the grass. Verts2 is the VertexPositionTexture array.">LoadGround</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a8ec874da6a1aa6fab66c9f1c0d7549a8" kindref="member" tooltip="Loads the vertex information about the robot and recreates it every game cycle to reflect the new pos...">UpDateRobotPosition</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BasicEffect(GraphicsDevice);<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>basic<sp/>effects<sp/>object<sp/>so<sp/>we<sp/>the<sp/>GPU<sp/>knows<sp/>how<sp/>to<sp/>render<sp/>the<sp/>vertex<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.LoadContent();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="class_attempt__7_1_1_simulation_main_1a5626f084ed61fc4807b4bd5cbc256129" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a5626f084ed61fc4807b4bd5cbc256129" kindref="member" tooltip="Unloads Information when the simulation is closed. Currently no information is saved when the simulat...">UnloadContent</ref>()</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Unload<sp/>any<sp/>non<sp/>ContentManager<sp/>content<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="class_attempt__7_1_1_simulation_main_1a2fcdaa01b7439002334e047819e3ae4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a2fcdaa01b7439002334e047819e3ae4f" kindref="member" tooltip="Main update method for the entire simulation. Simulation logic is updated when this method is called...">Update</ref>(GameTime<sp/>gameTime)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a4b98b01df022d9a02ce98bf80f0f5c9b" kindref="member" tooltip="Checks the keyboard for F3, and Escape.">GetKeyBoard</ref>(gameTime);<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>keyboard<sp/>for<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a8ec874da6a1aa6fab66c9f1c0d7549a8" kindref="member" tooltip="Loads the vertex information about the robot and recreates it every game cycle to reflect the new pos...">UpDateRobotPosition</ref>();<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>position<sp/>of<sp/>the<sp/>robot.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.Update(gameTime);<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>update<sp/>for<sp/>all<sp/>the<sp/>game<sp/>components<sp/>(camera,<sp/>robot,<sp/>and<sp/>imageAnalysis).<sp/>--<sp/>this<sp/>is<sp/>where<sp/>the<sp/>real<sp/>work<sp/>is<sp/>done<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="class_attempt__7_1_1_simulation_main_1a4b98b01df022d9a02ce98bf80f0f5c9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a4b98b01df022d9a02ce98bf80f0f5c9b" kindref="member" tooltip="Checks the keyboard for F3, and Escape.">GetKeyBoard</ref>(GameTime<sp/>gameTime1)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeyboardState<sp/>keyboardState<sp/>=<sp/>Keyboard.GetState();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>500<sp/>millsecond<sp/>between<sp/>updates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gameTime1.TotalGameTime.TotalMilliseconds<sp/>-<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.timePressedKey<sp/>&gt;<sp/>500)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardState.IsKeyDown(Keys.F3))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1ada7b29bc97491449c6cf58b58b7f82cc" kindref="member" tooltip="Time in totalmillseconds when F1, F2, or F3 were pushed.">timePressedKey</ref><sp/>=<sp/>(int)gameTime1.TotalGameTime.TotalMilliseconds;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(this.<ref refid="class_attempt__7_1_1_simulation_main_1a3b904d65677046e391d59846d2f1a8b9" kindref="member" tooltip="Bool representing if the main Camera moves its view to follow the robot.">trackRobot</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a3b904d65677046e391d59846d2f1a8b9" kindref="member" tooltip="Bool representing if the main Camera moves its view to follow the robot.">trackRobot</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>on<sp/>and<sp/>off<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a3b904d65677046e391d59846d2f1a8b9" kindref="member" tooltip="Bool representing if the main Camera moves its view to follow the robot.">trackRobot</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>on<sp/>and<sp/>off<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//toggle<sp/>the<sp/>hough<sp/>mode.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardState.IsKeyDown(Keys.F4))</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1ada7b29bc97491449c6cf58b58b7f82cc" kindref="member" tooltip="Time in totalmillseconds when F1, F2, or F3 were pushed.">timePressedKey</ref><sp/>=<sp/>(int)gameTime1.TotalGameTime.TotalMilliseconds;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<ref refid="class_attempt__7_1_1_simulation_main_1aaa69f7bf5be3a94041ab550508cfbd4b" kindref="member" tooltip="If 0 then Old mode (top left origin), if 1 then New Hough mode( bottom Center).">currentHoughMode</ref><sp/><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_simulation_main_1aaa69f7bf5be3a94041ab550508cfbd4b" kindref="member" tooltip="If 0 then Old mode (top left origin), if 1 then New Hough mode( bottom Center).">currentHoughMode</ref><sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>on<sp/>and<sp/>off<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_attempt__7_1_1_simulation_main_1aaa69f7bf5be3a94041ab550508cfbd4b" kindref="member" tooltip="If 0 then Old mode (top left origin), if 1 then New Hough mode( bottom Center).">currentHoughMode</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>on<sp/>and<sp/>off<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allows<sp/>the<sp/>game<sp/>to<sp/>exit<sp/>when<sp/>Escape<sp/>is<sp/>hit.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardState.IsKeyDown(Keys.Escape)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.Exit();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="class_attempt__7_1_1_simulation_main_1aaa69f7bf5be3a94041ab550508cfbd4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1aaa69f7bf5be3a94041ab550508cfbd4b" kindref="member" tooltip="If 0 then Old mode (top left origin), if 1 then New Hough mode( bottom Center).">currentHoughMode</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//public<sp/>int<sp/>GetHoughMode()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>currentHoughMode;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="class_attempt__7_1_1_simulation_main_1ae2774f61c773a44b36670c81e5df8b05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1ae2774f61c773a44b36670c81e5df8b05" kindref="member" tooltip="Main draw method for the simulation. Draws all the world from both the mainview and the robots view...">Draw</ref>(GameTime<sp/>gameTime)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a596379dec8c50adc14977c75005def80" kindref="member" tooltip="Set the renderTargets to a texture object in memory rather than rendering to the screen. Need target for both the Worldview and the robot CameraView.">BuildRenderTargets</ref>();<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>render<sp/>targets<sp/>to<sp/>be<sp/>in<sp/>the<sp/>computer<sp/>memory<sp/>instead<sp/>of<sp/>the<sp/>screen.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>through<sp/>each<sp/>camera<sp/>and<sp/>draw<sp/>the<sp/>world<sp/>from<sp/>its<sp/>persepective.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(<ref refid="class_attempt__7_1_1_camera" kindref="compound" tooltip="Represents the camera object/class that contains all the information needed about position and target...">Camera</ref><sp/>cam<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a3b83a138c458ab76ad38722ba6cced5a" kindref="member" tooltip="A list of the cameras. There are 2, The mainview and the robot view. WorldView Camera = 0 (The main c...">cameraList</ref>)<sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.SetRenderTarget(this.<ref refid="class_attempt__7_1_1_simulation_main_1abb56a338488e1b56bb87162cd8405c8f" kindref="member" tooltip="A list of the rendertargets. Rather than rendering to the screen, the image produced by the GPU is sa...">renderTargets</ref>[h]);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>render<sp/>target,<sp/>worldview<sp/>then<sp/>robot<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.Clear(Color.Black);<sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>screen<sp/>to<sp/>Black</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>world<sp/>from<sp/>the<sp/>perspective<sp/>of<sp/>each<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1abbd56e335ac6f87700aa78afdea7c6c8" kindref="member" tooltip="Draw the grass or ground from &amp;quot;camera&amp;quot;&amp;#39;s perspective.">DrawGrass</ref>(cam);<sp/></highlight><highlight class="comment">//<sp/>i.e<sp/>grass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a6600ca6533a6db25d8796c13b63c1a40" kindref="member" tooltip="Draw the lines from the &amp;quot;camera&amp;quot;&amp;#39;s persepective.">DrawColorLines</ref>(cam);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1acfd54a5aa5fb4311b2938ee7ab121022" kindref="member" tooltip="Draw the robot from the &amp;quot;camera&amp;quot;s perspective.">DrawRobot</ref>(cam);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h++;<sp/></highlight><highlight class="comment">//<sp/>Go<sp/>to<sp/>the<sp/>next<sp/>render<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>renderTarget<sp/>to<sp/>the<sp/>scree,<sp/>Clear<sp/>the<sp/>screen,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.SetRenderTarget(null);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>rendering<sp/>target<sp/>back<sp/>to<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.Clear(Color.Gray);<sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>screen<sp/>to<sp/>Gray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>imageAnalysis<sp/>object<sp/>the<sp/>robot&apos;s<sp/>view,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a9f9ea12c0d811d9bcd5f933adb3d75f3" kindref="member" tooltip="The image analysis object/class does the image processing.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1aa6cac5de12d6bf454500ee5498db48cb" kindref="member" tooltip="Takes a 2D renderTarget/Texture and sets it as the image to analze. Explicitly called in the Simulati...">SetRobotCameraView</ref>(this.<ref refid="class_attempt__7_1_1_simulation_main_1abb56a338488e1b56bb87162cd8405c8f" kindref="member" tooltip="A list of the rendertargets. Rather than rendering to the screen, the image produced by the GPU is sa...">renderTargets</ref>[1]);<sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>camera<sp/>view<sp/>from<sp/>the<sp/>robot<sp/>camera<sp/>to<sp/>the<sp/>analysis<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a9f9ea12c0d811d9bcd5f933adb3d75f3" kindref="member" tooltip="The image analysis object/class does the image processing.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1a1d0bc75993df71df5d005ab3d749bb81" kindref="member" tooltip="Stores the texture from the robot camera in a color array before the texture is disposed. Expicitly called in the SimulationMain Draw method.">Update1</ref>(gameTime);<sp/></highlight><highlight class="comment">//<sp/>Pull<sp/>out<sp/>the<sp/>color<sp/>data<sp/>of<sp/>the<sp/>texture<sp/>before<sp/>the<sp/>texture<sp/>is<sp/>disposed.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>render<sp/>target,<sp/>maks<sp/>sure<sp/>the<sp/>source<sp/>rectange<sp/>size<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>texture<sp/>to<sp/>draw<sp/>size,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(texture<sp/>to<sp/>draw,<sp/>size<sp/>of<sp/>the<sp/>part<sp/>of<sp/>the<sp/>texture<sp/>you<sp/>what<sp/>draw<sp/>(the<sp/>whole<sp/>thing),<sp/>Color,<sp/>rotation,<sp/>Origin<sp/>of<sp/>the<sp/>texture,scale<sp/>to<sp/>3/4<sp/>size,<sp/>no<sp/>effects,<sp/>0<sp/>is<sp/>default)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>view<sp/>port<sp/>to<sp/>the<sp/>main<sp/>view<sp/>and<sp/>draw<sp/>the<sp/>main<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.Viewport<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a65d06e9d2b30625630083b7526fa4dd3" kindref="member" tooltip="List holding the viewports used in the simulation.">viewPortList</ref>[0];<sp/></highlight><highlight class="comment">//<sp/>Main<sp/>View<sp/><sp/>is<sp/>2/3<sp/>of<sp/>the<sp/>screen<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref>.Begin();<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>2D<sp/>drawing<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref>.Draw(this.<ref refid="class_attempt__7_1_1_simulation_main_1abb56a338488e1b56bb87162cd8405c8f" kindref="member" tooltip="A list of the rendertargets. Rather than rendering to the screen, the image produced by the GPU is sa...">renderTargets</ref>[0],<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rectangle(0,<sp/>0,<sp/>GraphicsDevice.Viewport.Width,<sp/>GraphicsDevice.Viewport.Height),<sp/>Color.White);<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>MainView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1aa933058eb5333dbb1addb68b72c27def" kindref="member" tooltip="Draw the Simulation Status as either PAUSED or Active.">DrawText</ref>();<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>a<sp/>message<sp/>about<sp/>whether<sp/>the<sp/>simulation<sp/>is<sp/>paused<sp/>or<sp/>active.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref>.End();<sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>drawing.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>viewports<sp/>to<sp/>the<sp/>topLeft<sp/>view<sp/>port<sp/>of<sp/>the<sp/>window.<sp/>Draw<sp/>the<sp/>robot<sp/>view.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.Viewport<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a65d06e9d2b30625630083b7526fa4dd3" kindref="member" tooltip="List holding the viewports used in the simulation.">viewPortList</ref>[1];</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref>.Begin();<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>2D<sp/>drawing<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref>.Draw(this.<ref refid="class_attempt__7_1_1_simulation_main_1abb56a338488e1b56bb87162cd8405c8f" kindref="member" tooltip="A list of the rendertargets. Rather than rendering to the screen, the image produced by the GPU is sa...">renderTargets</ref>[1],<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Rectangle(0,<sp/>0,<sp/>GraphicsDevice.Viewport.Width,<sp/>GraphicsDevice.Viewport.Height),<sp/>Color.White);<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>robotView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref>.End();<sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>drawing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>viewports<sp/>to<sp/>the<sp/>bottomriht<sp/>view<sp/>port<sp/>of<sp/>the<sp/>window.<sp/>GiveDebug<sp/>information.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.Viewport<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a65d06e9d2b30625630083b7526fa4dd3" kindref="member" tooltip="List holding the viewports used in the simulation.">viewPortList</ref>[4];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref>.Begin();<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>2D<sp/>drawing<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe6aa0f5c85b090b06c0228cf4e7c21c" kindref="member">DrawTextDebugInfo</ref>();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref>.End();<sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>drawing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.Draw(gameTime);<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>all<sp/>the<sp/>drawableGameCmponets<sp/>draw<sp/>method<sp/>(imageAnalysis.cs).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(RenderTarget2D<sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1abb56a338488e1b56bb87162cd8405c8f" kindref="member" tooltip="A list of the rendertargets. Rather than rendering to the screen, the image produced by the GPU is sa...">renderTargets</ref>)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.Dispose();<sp/></highlight><highlight class="comment">//<sp/>Free<sp/>up<sp/>the<sp/>memory<sp/>resources<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="class_attempt__7_1_1_simulation_main_1afe6aa0f5c85b090b06c0228cf4e7c21c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1afe6aa0f5c85b090b06c0228cf4e7c21c" kindref="member">DrawTextDebugInfo</ref>()</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366" refid="class_attempt__7_1_1_simulation_main_1aabe2d52bb2b34aeeff6a5d8c98512ef6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1aabe2d52bb2b34aeeff6a5d8c98512ef6" kindref="member" tooltip="Creates the 5 view ports. View ports are like windows inside of a Window&amp;#39;s window. MainPort = 0  TopRight = 1 CenterRight = 2 BottomRight = 3 BottomLeft = 4 BottomCenter = 5 ">CreateViewPorts</ref>()</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a65d06e9d2b30625630083b7526fa4dd3" kindref="member" tooltip="List holding the viewports used in the simulation.">viewPortList</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Viewport&gt;();<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>list<sp/>for<sp/>the<sp/>viewports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Viewport<sp/>mainView<sp/>=<sp/>GraphicsDevice.Viewport;<sp/></highlight><highlight class="comment">//<sp/>Default<sp/>view<sp/>port<sp/>is<sp/>the<sp/>window<sp/>size.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainView.Width<sp/>=<sp/>(int)GraphicsDevice.Viewport.Width<sp/>*<sp/>2<sp/>/<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>up<sp/>2/3<sp/>of<sp/>the<sp/>x<sp/>and<sp/>y<sp/>distances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainView.Height<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)GraphicsDevice.Viewport.Height<sp/>*<sp/>2<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a65d06e9d2b30625630083b7526fa4dd3" kindref="member" tooltip="List holding the viewports used in the simulation.">viewPortList</ref>.Add(mainView);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Viewport<sp/>viewSide0<sp/>=<sp/>GraphicsDevice.Viewport;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewSide0.X<sp/>=<sp/>(int)GraphicsDevice.Viewport.Width<sp/>*<sp/>2<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewSide0.Y<sp/>=<sp/>i<sp/>*<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)GraphicsDevice.Viewport.Height<sp/>*<sp/>1<sp/>/<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>3<sp/>on<sp/>the<sp/>right<sp/>side<sp/>of<sp/>the<sp/>screen<sp/>going<sp/>down.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewSide0.Width<sp/>=<sp/>(int)GraphicsDevice.Viewport.Width<sp/>*<sp/>1<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewSide0.Height<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)GraphicsDevice.Viewport.Height<sp/>*<sp/>1<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a65d06e9d2b30625630083b7526fa4dd3" kindref="member" tooltip="List holding the viewports used in the simulation.">viewPortList</ref>.Add(viewSide0);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Viewport<sp/>viewSide0<sp/>=<sp/>GraphicsDevice.Viewport;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewSide0.X<sp/>=<sp/>i<sp/>*<sp/>(int)GraphicsDevice.Viewport.Width<sp/>*<sp/>1<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewSide0.Y<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)GraphicsDevice.Viewport.Height<sp/>*<sp/>2<sp/>/<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>3<sp/>on<sp/>bottom<sp/>of<sp/>the<sp/>screen<sp/>going<sp/>left.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewSide0.Width<sp/>=<sp/>(int)GraphicsDevice.Viewport.Width<sp/>*<sp/>1<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewSide0.Height<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)GraphicsDevice.Viewport.Height<sp/>*<sp/>1<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a65d06e9d2b30625630083b7526fa4dd3" kindref="member" tooltip="List holding the viewports used in the simulation.">viewPortList</ref>.Add(viewSide0);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="class_attempt__7_1_1_simulation_main_1a931a8a86dead3b0cb29f28453cf4f6f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Texture2D<sp/><ref refid="class_attempt__7_1_1_simulation_main_1a931a8a86dead3b0cb29f28453cf4f6f0" kindref="member" tooltip="Takes a texture and returns a larger texture. Size of the new texture is 1024,1024.">CreateGrassTexture</ref>(Texture2D<sp/>texturetoUse)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color[,]<sp/>groundColors<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a5918fc691a0121426b6c3382a02e86c0" kindref="member" tooltip="Takes a texture converts it into a 2D color array.">TextureTo2DArray</ref>(texturetoUse);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>newTextureSize<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(1024,<sp/>1024);<sp/></highlight><highlight class="comment">//<sp/>Size<sp/>of<sp/>the<sp/>new<sp/>texture.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color[]<sp/>foregroundColors<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color[(int)newTextureSize.X<sp/>*<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)newTextureSize.Y];</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>(int)newTextureSize.X;<sp/>x++)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>(int)newTextureSize.Y;<sp/>y++)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foregroundColors[x<sp/>+<sp/>(y<sp/>*<sp/>(int)newTextureSize.X)]<sp/>=<sp/>groundColors[(x<sp/>*<sp/>2)<sp/>%<sp/>texturetoUse.Width,<sp/>(y<sp/>*<sp/>2)<sp/>%<sp/>texturetoUse.Height];</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Texture2D<sp/>newTexture<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Texture2D(this.GraphicsDevice,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)newTextureSize.X,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)newTextureSize.Y,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>SurfaceFormat.Color);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTexture.SetData(foregroundColors);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newTexture;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="class_attempt__7_1_1_simulation_main_1a5918fc691a0121426b6c3382a02e86c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Color[,]<sp/><ref refid="class_attempt__7_1_1_simulation_main_1a5918fc691a0121426b6c3382a02e86c0" kindref="member" tooltip="Takes a texture converts it into a 2D color array.">TextureTo2DArray</ref>(Texture2D<sp/>texture)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color[]<sp/>colors1D<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color[texture.Width<sp/>*<sp/>texture.Height];<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>1D<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture.GetData(colors1D);<sp/></highlight><highlight class="comment">//<sp/>Pull<sp/>the<sp/>color<sp/>data<sp/>out<sp/>of<sp/>the<sp/>texture<sp/>to<sp/>the<sp/>1D<sp/>arrray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color[,]<sp/>colors2D<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Color[texture.Width,<sp/>texture.Height];<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>2D<sp/>arrray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>texture.Width;<sp/>x++)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>texture.Height;<sp/>y++)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors2D[x,<sp/>y]<sp/>=<sp/>colors1D[x<sp/>+<sp/>(y<sp/>*<sp/>texture.Width)];<sp/></highlight><highlight class="comment">//<sp/>Populate<sp/>the<sp/>2D<sp/>array<sp/>with<sp/>the<sp/>correct<sp/>values.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>colors2D;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="class_attempt__7_1_1_simulation_main_1ad5cec97af179a424e2fd705ad82fc6bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1ad5cec97af179a424e2fd705ad82fc6bc" kindref="member" tooltip="Create vertex data for the grass. Verts2 is the VertexPositionTexture array.">LoadGround</ref>()</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a8c77e7d93e5e69fb14c1a36188e39a02" kindref="member" tooltip="The vertexPositionColor array holding the information for the grass/ground.">verts2</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionTexture[4];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimension<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>textureDim<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a8c77e7d93e5e69fb14c1a36188e39a02" kindref="member" tooltip="The vertexPositionColor array holding the information for the grass/ground.">verts2</ref>[0]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionTexture(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(-dimension,<sp/>dimension,<sp/>0),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>0));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a8c77e7d93e5e69fb14c1a36188e39a02" kindref="member" tooltip="The vertexPositionColor array holding the information for the grass/ground.">verts2</ref>[1]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionTexture(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(dimension,<sp/>dimension,<sp/>0),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(textureDim,<sp/>0));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a8c77e7d93e5e69fb14c1a36188e39a02" kindref="member" tooltip="The vertexPositionColor array holding the information for the grass/ground.">verts2</ref>[2]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionTexture(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(-dimension,<sp/>-dimension,<sp/>0),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>textureDim));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a8c77e7d93e5e69fb14c1a36188e39a02" kindref="member" tooltip="The vertexPositionColor array holding the information for the grass/ground.">verts2</ref>[3]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionTexture(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(dimension,<sp/>-dimension,<sp/>0),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(textureDim,<sp/>textureDim));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="class_attempt__7_1_1_simulation_main_1a376590da39458ac9580001ca9fc1a036" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a376590da39458ac9580001ca9fc1a036" kindref="member" tooltip="Creates the vertexPositionColor array &amp;quot;verts1&amp;quot; that is used to draw the white lines...">LoadLines</ref>()</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1acdfd2380fdb8526a45e083f23b8d570b" kindref="member" tooltip="The vertexPositionColor array holding the vertex information needed for drawing the white lines repre...">verts1</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor[37<sp/>*<sp/>4];<sp/></highlight><highlight class="comment">//<sp/>2<sp/>innerlines<sp/>and<sp/>2<sp/>outerlines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>randomFirstX<sp/>=<sp/>0,<sp/>randomFirstY<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Curve<sp/>c<sp/>=<sp/>new<sp/>Curve();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CurveKeyCollection<sp/>cCollection<sp/>=<sp/>new<sp/>CurveKeyCollection();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cCollection.Add(new<sp/>CurveKey(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;i&quot;<sp/>is<sp/>in<sp/>radians<sp/>going<sp/>around<sp/>the<sp/>circle.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>MathHelper.Pi<sp/>*<sp/>2;<sp/>i<sp/>+=<sp/>MathHelper.Pi<sp/>/<sp/>18)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>randomAdd1<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1ae9fff7ad9450d2b1c783a8867d386031" kindref="member" tooltip="Represents a random object so that random numbers can be generated.">rand</ref>.Next(0,<sp/>2);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>randomAdd2<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1ae9fff7ad9450d2b1c783a8867d386031" kindref="member" tooltip="Represents a random object so that random numbers can be generated.">rand</ref>.Next(0,<sp/>2);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randomFirstX<sp/>=<sp/>randomAdd1;<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>random<sp/>changes<sp/>for<sp/>the<sp/>first<sp/>set<sp/>of<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randomFirstY<sp/>=<sp/>randomAdd2;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>36)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randomAdd1<sp/>=<sp/>randomFirstX;<sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>the<sp/>same<sp/>random<sp/>changes<sp/>to<sp/>the<sp/>last<sp/>that<sp/>you<sp/>did<sp/>the<sp/>first.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randomAdd2<sp/>=<sp/>randomFirstY;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1acdfd2380fdb8526a45e083f23b8d570b" kindref="member" tooltip="The vertexPositionColor array holding the vertex information needed for drawing the white lines repre...">verts1</ref>[j]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((Math.Cos(i)<sp/>*<sp/>10)<sp/>+<sp/>randomAdd1),<sp/>(float)((Math.Sin(i)<sp/>*<sp/>10)<sp/>+<sp/>randomAdd2),<sp/>0),<sp/>Color.WhiteSmoke);<sp/></highlight><highlight class="comment">//<sp/>1st<sp/>inside<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1acdfd2380fdb8526a45e083f23b8d570b" kindref="member" tooltip="The vertexPositionColor array holding the vertex information needed for drawing the white lines repre...">verts1</ref>[j<sp/>+<sp/>37]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((Math.Cos(i)<sp/>*<sp/>15)<sp/>+<sp/>randomAdd1),<sp/>(float)((Math.Sin(i)<sp/>*<sp/>14)<sp/>+<sp/>randomAdd2),<sp/>0),<sp/>Color.White);<sp/></highlight><highlight class="comment">//<sp/>1st<sp/>outside<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1acdfd2380fdb8526a45e083f23b8d570b" kindref="member" tooltip="The vertexPositionColor array holding the vertex information needed for drawing the white lines repre...">verts1</ref>[j<sp/>+<sp/>(37<sp/>*<sp/>2)]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((Math.Cos(i)<sp/>*<sp/>10.2f)<sp/>+<sp/>randomAdd1),<sp/>(float)((Math.Sin(i)<sp/>*<sp/>10.2f)<sp/>+<sp/>randomAdd2),<sp/>0),<sp/>Color.White);<sp/></highlight><highlight class="comment">//<sp/>2nd<sp/>inside<sp/>line<sp/>--<sp/>make<sp/>it<sp/>thicker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1acdfd2380fdb8526a45e083f23b8d570b" kindref="member" tooltip="The vertexPositionColor array holding the vertex information needed for drawing the white lines repre...">verts1</ref>[j<sp/>+<sp/>(37<sp/>*<sp/>3)]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((Math.Cos(i)<sp/>*<sp/>15.2f)<sp/>+<sp/>randomAdd1),<sp/>(float)((Math.Sin(i)<sp/>*<sp/>14.2f)<sp/>+<sp/>randomAdd2),<sp/>0),<sp/>Color.White);<sp/></highlight><highlight class="comment">//<sp/>2nd<sp/>outside<sp/>line<sp/>--<sp/>make<sp/>it<sp/>thicker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>the<sp/>robot&apos;s<sp/>starting<sp/>position<sp/>between<sp/>the<sp/>lines<sp/>and<sp/>store<sp/>the<sp/>robot&apos;s<sp/>start<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a80810188dd0ef0a7422d0594ce3b7eca" kindref="member" tooltip="The robot object. See the robot class for more information.">robot1</ref>.<ref refid="class_attempt__7_1_1_robot_1a9945c6d5a6e824f9669b3e6720f644e3" kindref="member" tooltip="Called when the robot is first placed. Stores the value of the start position so that the robot can b...">SetStartPosition</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(10.5f<sp/>+<sp/>randomFirstX),<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(0<sp/>+<sp/>(randomFirstY<sp/>/<sp/>2)),<sp/>0));</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="class_attempt__7_1_1_simulation_main_1a8ec874da6a1aa6fab66c9f1c0d7549a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a8ec874da6a1aa6fab66c9f1c0d7549a8" kindref="member" tooltip="Loads the vertex information about the robot and recreates it every game cycle to reflect the new pos...">UpDateRobotPosition</ref>()</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.<ref refid="class_attempt__7_1_1_simulation_main_1a80810188dd0ef0a7422d0594ce3b7eca" kindref="member" tooltip="The robot object. See the robot class for more information.">robot1</ref>.<ref refid="class_attempt__7_1_1_robot_1a68c2627772051c07f1551c38daf9ab95" kindref="member" tooltip="Accessor method that tells if the robot is moving forward.">GetIsRobotPaused</ref>()<sp/>!=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a80810188dd0ef0a7422d0594ce3b7eca" kindref="member" tooltip="The robot object. See the robot class for more information.">robot1</ref>.<ref refid="class_attempt__7_1_1_robot_1a2ad0f76fceb915c1f1b0b98f4dc4686e" kindref="member" tooltip="Turns the robot based on the value of the turnIndicator Turn indicator must be greater or less than t...">ChangeDirection</ref>(this.<ref refid="class_attempt__7_1_1_simulation_main_1a9f9ea12c0d811d9bcd5f933adb3d75f3" kindref="member" tooltip="The image analysis object/class does the image processing.">imageAnalysis</ref>.<ref refid="class_attempt__7_1_1_image_analysis_1a99c5e65fe48a1145d7c9afba96bfb220" kindref="member" tooltip="Allows the SimulationMain to get the turnIndicator.">GetTurnIndicator</ref>());<sp/></highlight><highlight class="comment">//<sp/>Steering<sp/>determination<sp/>get<sp/>from<sp/>imageAnalysis<sp/>and<sp/>give<sp/>to<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a825a374a50b64f52d5c990b999ac7555" kindref="member" tooltip="The vertexPositionColor Array holding the information needed for the 3D representation of the robot...">verts3</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor[5];<sp/></highlight><highlight class="comment">//<sp/>Pyramid<sp/>that<sp/>represents<sp/>the<sp/>robot.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>robotPosition<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a80810188dd0ef0a7422d0594ce3b7eca" kindref="member" tooltip="The robot object. See the robot class for more information.">robot1</ref>.<ref refid="class_attempt__7_1_1_robot_1a121c5b23a88c3a1b57bbfc728e63f7bf" kindref="member" tooltip="Gets the current position of the Robot.">GetPosition</ref>();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a825a374a50b64f52d5c990b999ac7555" kindref="member" tooltip="The vertexPositionColor Array holding the information needed for the 3D representation of the robot...">verts3</ref>[0]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(-0.3f,<sp/>0.3f,<sp/>0)<sp/>+<sp/>robotPosition,<sp/>Color.Aqua);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a825a374a50b64f52d5c990b999ac7555" kindref="member" tooltip="The vertexPositionColor Array holding the information needed for the 3D representation of the robot...">verts3</ref>[1]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0.3f,<sp/>0.3f,<sp/>0)<sp/>+<sp/>robotPosition,<sp/>Color.Green);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a825a374a50b64f52d5c990b999ac7555" kindref="member" tooltip="The vertexPositionColor Array holding the information needed for the 3D representation of the robot...">verts3</ref>[2]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(-0.0f,<sp/>0.0f,<sp/>1.0f)<sp/>+<sp/>robotPosition,<sp/>Color.Red);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a825a374a50b64f52d5c990b999ac7555" kindref="member" tooltip="The vertexPositionColor Array holding the information needed for the 3D representation of the robot...">verts3</ref>[3]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(-0.3f,<sp/>-0.3f,<sp/>0)<sp/>+<sp/>robotPosition,<sp/>Color.Black);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a825a374a50b64f52d5c990b999ac7555" kindref="member" tooltip="The vertexPositionColor Array holding the information needed for the 3D representation of the robot...">verts3</ref>[4]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VertexPositionColor(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(-0.3f,<sp/>0.3f,<sp/>0)<sp/>+<sp/>robotPosition,<sp/>Color.Orange);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.<ref refid="class_attempt__7_1_1_simulation_main_1a3b904d65677046e391d59846d2f1a8b9" kindref="member" tooltip="Bool representing if the main Camera moves its view to follow the robot.">trackRobot</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a3b83a138c458ab76ad38722ba6cced5a" kindref="member" tooltip="A list of the cameras. There are 2, The mainview and the robot view. WorldView Camera = 0 (The main c...">cameraList</ref>[0].SetCameraPositionAndTarget(robotPosition<sp/>+<sp/>(Vector3.UnitZ<sp/>*<sp/>8),<sp/>robotPosition);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>main<sp/>camera<sp/>to<sp/>follow<sp/>if<sp/>follow<sp/>is<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a3b83a138c458ab76ad38722ba6cced5a" kindref="member" tooltip="A list of the cameras. There are 2, The mainview and the robot view. WorldView Camera = 0 (The main c...">cameraList</ref>[1]<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a80810188dd0ef0a7422d0594ce3b7eca" kindref="member" tooltip="The robot object. See the robot class for more information.">robot1</ref>.<ref refid="class_attempt__7_1_1_robot_1aeda683933e67246b4e3758d8bdd250c3" kindref="member" tooltip="Gets the camera/view that the robot&amp;#39;s camera sees.">GetRobotCamera</ref>();<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>robot<sp/>camera<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="528" refid="class_attempt__7_1_1_simulation_main_1a596379dec8c50adc14977c75005def80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a596379dec8c50adc14977c75005def80" kindref="member" tooltip="Set the renderTargets to a texture object in memory rather than rendering to the screen. Need target for both the Worldview and the robot CameraView.">BuildRenderTargets</ref>()</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1abb56a338488e1b56bb87162cd8405c8f" kindref="member" tooltip="A list of the rendertargets. Rather than rendering to the screen, the image produced by the GPU is sa...">renderTargets</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;RenderTarget2D&gt;();<sp/></highlight><highlight class="comment">//<sp/>This<sp/>list<sp/>will<sp/>correspond<sp/>to<sp/>the<sp/>camera<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Main<sp/>view<sp/>target.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderTarget2D<sp/>targetWorldView<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RenderTarget2D(this.GraphicsDevice,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)this.<ref refid="class_attempt__7_1_1_simulation_main_1aab4721054890276bdd393bf33731eb88" kindref="member" tooltip="2D vector representing the resolution of the cameras used in the simulation.">screenSize</ref>.X,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">this</highlight><highlight class="normal">.screenSize.Y);<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>target<sp/>for<sp/>rendering<sp/>of<sp/>the<sp/>mouse<sp/>countroled<sp/>camera<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1abb56a338488e1b56bb87162cd8405c8f" kindref="member" tooltip="A list of the rendertargets. Rather than rendering to the screen, the image produced by the GPU is sa...">renderTargets</ref>.Add(targetWorldView);<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>the<sp/>list<sp/>of<sp/>targets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>render<sp/>target<sp/>for<sp/>the<sp/>robot&apos;s<sp/>camera<sp/>view.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RenderTarget2D<sp/>targetRobotView<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RenderTarget2D(GraphicsDevice,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)this.<ref refid="class_attempt__7_1_1_simulation_main_1aab4721054890276bdd393bf33731eb88" kindref="member" tooltip="2D vector representing the resolution of the cameras used in the simulation.">screenSize</ref>.X,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight><highlight class="keyword">this</highlight><highlight class="normal">.screenSize.Y);<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>target<sp/>for<sp/>the<sp/>render<sp/>of<sp/>the<sp/>robot<sp/>camera<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1abb56a338488e1b56bb87162cd8405c8f" kindref="member" tooltip="A list of the rendertargets. Rather than rendering to the screen, the image produced by the GPU is sa...">renderTargets</ref>.Add(targetRobotView);<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>the<sp/>list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="class_attempt__7_1_1_simulation_main_1acfd54a5aa5fb4311b2938ee7ab121022" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1acfd54a5aa5fb4311b2938ee7ab121022" kindref="member" tooltip="Draw the robot from the &amp;quot;camera&amp;quot;s perspective.">DrawRobot</ref>(<ref refid="class_attempt__7_1_1_camera" kindref="compound" tooltip="Represents the camera object/class that contains all the information needed about position and target...">Camera</ref><sp/>camera)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.World<sp/>=<sp/>camera.<ref refid="class_attempt__7_1_1_camera_1a3bc8d53e4d9b029bb75f8f0e7b09cc17" kindref="member" tooltip="Matrix representing how the real world cordinates differ from that of the rendering by the camera...">World</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.View<sp/>=<sp/>camera.<ref refid="class_attempt__7_1_1_camera_1ab58715b7ebc0eb1b0181638331e7fe04" kindref="member" tooltip="Matrix representation of the view determined by the position, target, and updirection.">View</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.Projection<sp/>=<sp/>camera.<ref refid="class_attempt__7_1_1_camera_1afad745cd526a8c616843da8464a4d256" kindref="member" tooltip="Matrix representation of the view determined by the angle of the field of view (Pi/4), aspectRatio, nearest plane visible (1), and farthest plane visible (1200)">Projection</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.TextureEnabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.VertexColorEnabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(EffectPass<sp/>pass<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.CurrentTechnique.Passes)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass.Apply();</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.DrawUserPrimitives&lt;VertexPositionColor&gt;(PrimitiveType.TriangleStrip,<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a825a374a50b64f52d5c990b999ac7555" kindref="member" tooltip="The vertexPositionColor Array holding the information needed for the 3D representation of the robot...">verts3</ref>,<sp/>0,<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>Verts3<sp/>is<sp/>the<sp/>robot.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="class_attempt__7_1_1_simulation_main_1a6600ca6533a6db25d8796c13b63c1a40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1a6600ca6533a6db25d8796c13b63c1a40" kindref="member" tooltip="Draw the lines from the &amp;quot;camera&amp;quot;&amp;#39;s persepective.">DrawColorLines</ref>(<ref refid="class_attempt__7_1_1_camera" kindref="compound" tooltip="Represents the camera object/class that contains all the information needed about position and target...">Camera</ref><sp/>camera)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.World<sp/>=<sp/>camera.<ref refid="class_attempt__7_1_1_camera_1a3bc8d53e4d9b029bb75f8f0e7b09cc17" kindref="member" tooltip="Matrix representing how the real world cordinates differ from that of the rendering by the camera...">World</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.View<sp/>=<sp/>camera.<ref refid="class_attempt__7_1_1_camera_1ab58715b7ebc0eb1b0181638331e7fe04" kindref="member" tooltip="Matrix representation of the view determined by the position, target, and updirection.">View</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.Projection<sp/>=<sp/>camera.<ref refid="class_attempt__7_1_1_camera_1afad745cd526a8c616843da8464a4d256" kindref="member" tooltip="Matrix representation of the view determined by the angle of the field of view (Pi/4), aspectRatio, nearest plane visible (1), and farthest plane visible (1200)">Projection</ref>;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.TextureEnabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.VertexColorEnabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(EffectPass<sp/>pass<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.CurrentTechnique.Passes)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass.Apply();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.DrawUserPrimitives&lt;VertexPositionColor&gt;(PrimitiveType.LineStrip,<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1acdfd2380fdb8526a45e083f23b8d570b" kindref="member" tooltip="The vertexPositionColor array holding the vertex information needed for drawing the white lines repre...">verts1</ref>,<sp/>0,<sp/>36);<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>1st<sp/>inner<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.DrawUserPrimitives&lt;VertexPositionColor&gt;(PrimitiveType.LineStrip,<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1acdfd2380fdb8526a45e083f23b8d570b" kindref="member" tooltip="The vertexPositionColor array holding the vertex information needed for drawing the white lines repre...">verts1</ref>,<sp/>37,<sp/>36);<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>2nd<sp/>inner<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.DrawUserPrimitives&lt;VertexPositionColor&gt;(PrimitiveType.LineStrip,<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1acdfd2380fdb8526a45e083f23b8d570b" kindref="member" tooltip="The vertexPositionColor array holding the vertex information needed for drawing the white lines repre...">verts1</ref>,<sp/>37<sp/>*<sp/>2,<sp/>36);<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>outerline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.GraphicsDevice.DrawUserPrimitives&lt;VertexPositionColor&gt;(PrimitiveType.LineStrip,<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1acdfd2380fdb8526a45e083f23b8d570b" kindref="member" tooltip="The vertexPositionColor array holding the vertex information needed for drawing the white lines repre...">verts1</ref>,<sp/>37<sp/>*<sp/>3,<sp/>36);<sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>2nd<sp/>outerline<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="class_attempt__7_1_1_simulation_main_1abbd56e335ac6f87700aa78afdea7c6c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1abbd56e335ac6f87700aa78afdea7c6c8" kindref="member" tooltip="Draw the grass or ground from &amp;quot;camera&amp;quot;&amp;#39;s perspective.">DrawGrass</ref>(<ref refid="class_attempt__7_1_1_camera" kindref="compound" tooltip="Represents the camera object/class that contains all the information needed about position and target...">Camera</ref><sp/>camera)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.World<sp/>=<sp/>camera.<ref refid="class_attempt__7_1_1_camera_1a3bc8d53e4d9b029bb75f8f0e7b09cc17" kindref="member" tooltip="Matrix representing how the real world cordinates differ from that of the rendering by the camera...">World</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.View<sp/>=<sp/>camera.<ref refid="class_attempt__7_1_1_camera_1ab58715b7ebc0eb1b0181638331e7fe04" kindref="member" tooltip="Matrix representation of the view determined by the position, target, and updirection.">View</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.Projection<sp/>=<sp/>camera.<ref refid="class_attempt__7_1_1_camera_1afad745cd526a8c616843da8464a4d256" kindref="member" tooltip="Matrix representation of the view determined by the angle of the field of view (Pi/4), aspectRatio, nearest plane visible (1), and farthest plane visible (1200)">Projection</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.VertexColorEnabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.Texture<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a6d8a090dc3732924bc787fe73cd09657" kindref="member" tooltip="A large tiled version of the grass Texture.">largeGrass</ref><sp/><sp/>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.TextureEnabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Because<sp/>the<sp/>ground<sp/>is<sp/>a<sp/>texture<sp/>object.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(EffectPass<sp/>pass<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a68088515c710f3045abb248dc77fb059" kindref="member" tooltip="The basicEffects for rendering in 3D.">basicEffects</ref>.CurrentTechnique.Passes)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass.Apply();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GraphicsDevice.DrawUserPrimitives&lt;VertexPositionTexture&gt;(PrimitiveType.TriangleStrip,<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a8c77e7d93e5e69fb14c1a36188e39a02" kindref="member" tooltip="The vertexPositionColor array holding the information for the grass/ground.">verts2</ref>,<sp/>0,<sp/>2);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="class_attempt__7_1_1_simulation_main_1aa933058eb5333dbb1addb68b72c27def" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_simulation_main_1aa933058eb5333dbb1addb68b72c27def" kindref="member" tooltip="Draw the Simulation Status as either PAUSED or Active.">DrawText</ref>()</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>simulationPause<sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1a80810188dd0ef0a7422d0594ce3b7eca" kindref="member" tooltip="The robot object. See the robot class for more information.">robot1</ref>.<ref refid="class_attempt__7_1_1_robot_1a68c2627772051c07f1551c38daf9ab95" kindref="member" tooltip="Accessor method that tells if the robot is moving forward.">GetIsRobotPaused</ref>();<sp/></highlight><highlight class="comment">//<sp/>Find<sp/>if<sp/>the<sp/>simulatin<sp/>is<sp/>paused<sp/>from<sp/>the<sp/>robot.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(simulationPause<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_simulation_main_1ac193bee1fac89d0148938ab528684f89" kindref="member" tooltip="The 2D font object needed to show text. Size = 20.">arialLarge</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Simulation<sp/>Status---<sp/>PAUSED&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>0),<sp/>Color.Yellow);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_simulation_main_1afe8a6a7e4c03f00c8b92448b8ce11e82" kindref="member" tooltip="The sprite batch object. Used to draw 2D graphics.">spriteBatch</ref>.DrawString(this.<ref refid="class_attempt__7_1_1_simulation_main_1ac193bee1fac89d0148938ab528684f89" kindref="member" tooltip="The 2D font object needed to show text. Size = 20.">arialLarge</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Simulation<sp/>Status---<sp/>Active&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector2(0,<sp/>0),<sp/>Color.Green);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Anthony/Dropbox/Senior Project/attempt 7/attempt 7/attempt 7/SimulationMain.cs"/>
  </compounddef>
</doxygen>
