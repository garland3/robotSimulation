<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.3">
  <compounddef id="_robot_8cs" kind="file">
    <compoundname>Robot.cs</compoundname>
    <innerclass refid="class_attempt__7_1_1_robot" prot="public">Attempt_7::Robot</innerclass>
    <innernamespace refid="namespace_attempt__7">Attempt_7</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;copyright<sp/>file=&quot;Robot.cs&quot;<sp/>company=&quot;Anthony&quot;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Company<sp/>copyright<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/copyright&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Attempt_7</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Audio;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Content;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.GamerServices;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Graphics;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Input;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.Xna.Framework.Media;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="class_attempt__7_1_1_robot" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_attempt__7_1_1_robot" kindref="compound">Robot</ref><sp/>:<sp/>Microsoft.Xna.Framework.GameComponent</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28" refid="class_attempt__7_1_1_robot_1a2c385dd8076a962677e83ad6a6dc2bba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_attempt__7_1_1_robot_1a2c385dd8076a962677e83ad6a6dc2bba" kindref="member" tooltip="Position of the robot.">position</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_attempt__7_1_1_robot_1aa928880825b2dadef2602204a6998854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_attempt__7_1_1_robot_1aa928880825b2dadef2602204a6998854" kindref="member" tooltip="Where the robot starts. Needed so it can be reset.">startPosition</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_attempt__7_1_1_robot_1a7bf6f1325eee035a51c8ab387e7a79b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a7bf6f1325eee035a51c8ab387e7a79b8" kindref="member" tooltip="Speed the robot is moving forward on update. /.">speed</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_attempt__7_1_1_robot_1a3d145c2fa647a421cebd0cd1ba2908e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a3d145c2fa647a421cebd0cd1ba2908e0" kindref="member" tooltip="The distance in front of the robot that the camera is pointed at.">distanceToCameraTarget</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_attempt__7_1_1_robot_1a4f546940b473ee32465833ddb9e14bc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a4f546940b473ee32465833ddb9e14bc0" kindref="member" tooltip="Height of the camera above the robot.">cameraHeight</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_attempt__7_1_1_robot_1a7a9896ed9d9a0eff3a72a38d9a79e16d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_camera" kindref="compound" tooltip="Represents the camera object/class that contains all the information needed about position and target...">Camera</ref><sp/><ref refid="class_attempt__7_1_1_robot_1a7a9896ed9d9a0eff3a72a38d9a79e16d" kindref="member" tooltip="Camera associated with the robot.">robotCameraView</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_attempt__7_1_1_robot_1a150306a7cb29e38e31b4c583dd260845" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a150306a7cb29e38e31b4c583dd260845" kindref="member" tooltip="Is the robot moving on each all to update? if paused = true then moving, if false then not moving...">paused</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_attempt__7_1_1_robot_1ab4f37d2ec38b3a9fa404e6d9c74c54cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1ab4f37d2ec38b3a9fa404e6d9c74c54cc" kindref="member" tooltip="How big does the turn indicator have to be, before the robot turns. 20 is default.">changeDirectionThreshholdValue</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_attempt__7_1_1_robot_1a6cce884644ea640990454230965f80c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a6cce884644ea640990454230965f80c5" kindref="member" tooltip="Time in total milliseconds from the start of the game to the last time one of the keys was pressed...">timePressedKey</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_attempt__7_1_1_robot_1a785ba173cf0504dee326170d3b4db554" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a785ba173cf0504dee326170d3b4db554" kindref="member" tooltip="Initializes a new instance of the Robot class.">Robot</ref>(Game<sp/>game,<sp/>Vector3<sp/><ref refid="class_attempt__7_1_1_robot_1a2c385dd8076a962677e83ad6a6dc2bba" kindref="member" tooltip="Position of the robot.">position</ref>,<sp/>Vector3<sp/><ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a7bf6f1325eee035a51c8ab387e7a79b8" kindref="member" tooltip="Speed the robot is moving forward on update. /.">speed</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>howFarToLookInFront,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a4f546940b473ee32465833ddb9e14bc0" kindref="member" tooltip="Height of the camera above the robot.">cameraHeight</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>base(game)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.position<sp/>=<sp/><ref refid="class_attempt__7_1_1_robot_1a2c385dd8076a962677e83ad6a6dc2bba" kindref="member" tooltip="Position of the robot.">position</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.direction<sp/>=<sp/><ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.direction.Normalize();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.speed<sp/>=<sp/><ref refid="class_attempt__7_1_1_robot_1a7bf6f1325eee035a51c8ab387e7a79b8" kindref="member" tooltip="Speed the robot is moving forward on update. /.">speed</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a3d145c2fa647a421cebd0cd1ba2908e0" kindref="member" tooltip="The distance in front of the robot that the camera is pointed at.">distanceToCameraTarget</ref><sp/>=<sp/>howFarToLookInFront;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.cameraHeight<sp/>=<sp/><ref refid="class_attempt__7_1_1_robot_1a4f546940b473ee32465833ddb9e14bc0" kindref="member" tooltip="Height of the camera above the robot.">cameraHeight</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>camera<sp/>for<sp/>the<sp/>robot<sp/>based<sp/>on<sp/>the<sp/>information<sp/>just<sp/>assigned<sp/>to<sp/>the<sp/>robot.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a7a9896ed9d9a0eff3a72a38d9a79e16d" kindref="member" tooltip="Camera associated with the robot.">robotCameraView</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_camera" kindref="compound" tooltip="Represents the camera object/class that contains all the information needed about position and target...">Camera</ref>(Game,<sp/>this.position<sp/>+<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>this.cameraHeight),<sp/>this.position<sp/>+<sp/>Vector3.Multiply(</highlight><highlight class="keyword">this</highlight><highlight class="normal">.direction,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.distanceToCameraTarget),<sp/>Vector3.Backward,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_attempt__7_1_1_robot_1a121c5b23a88c3a1b57bbfc728e63f7bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_attempt__7_1_1_robot_1a121c5b23a88c3a1b57bbfc728e63f7bf" kindref="member" tooltip="Gets the current position of the Robot.">GetPosition</ref>()</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a2c385dd8076a962677e83ad6a6dc2bba" kindref="member" tooltip="Position of the robot.">position</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_attempt__7_1_1_robot_1a9541d93ce48fe779926507f5b0a9f229" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a9541d93ce48fe779926507f5b0a9f229" kindref="member" tooltip="Sets the position of the robot.">SetPosition</ref>(Vector3<sp/>pos)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a2c385dd8076a962677e83ad6a6dc2bba" kindref="member" tooltip="Position of the robot.">position</ref><sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_attempt__7_1_1_robot_1a9945c6d5a6e824f9669b3e6720f644e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a9945c6d5a6e824f9669b3e6720f644e3" kindref="member" tooltip="Called when the robot is first placed. Stores the value of the start position so that the robot can b...">SetStartPosition</ref>(Vector3<sp/>pos)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a2c385dd8076a962677e83ad6a6dc2bba" kindref="member" tooltip="Position of the robot.">position</ref><sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1aa928880825b2dadef2602204a6998854" kindref="member" tooltip="Where the robot starts. Needed so it can be reset.">startPosition</ref><sp/>=<sp/>pos;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>Start<sp/>position<sp/>so<sp/>it<sp/>can<sp/>be<sp/>reset<sp/>later.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_attempt__7_1_1_robot_1aeda683933e67246b4e3758d8bdd250c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_camera" kindref="compound" tooltip="Represents the camera object/class that contains all the information needed about position and target...">Camera</ref><sp/><ref refid="class_attempt__7_1_1_robot_1aeda683933e67246b4e3758d8bdd250c3" kindref="member" tooltip="Gets the camera/view that the robot&amp;#39;s camera sees.">GetRobotCamera</ref>()</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a7a9896ed9d9a0eff3a72a38d9a79e16d" kindref="member" tooltip="Camera associated with the robot.">robotCameraView</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_attempt__7_1_1_robot_1a68c2627772051c07f1551c38daf9ab95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a68c2627772051c07f1551c38daf9ab95" kindref="member" tooltip="Accessor method that tells if the robot is moving forward.">GetIsRobotPaused</ref>()</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a150306a7cb29e38e31b4c583dd260845" kindref="member" tooltip="Is the robot moving on each all to update? if paused = true then moving, if false then not moving...">paused</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="class_attempt__7_1_1_robot_1a7f204250cb4974ce920c698ce72556d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Vector3<sp/><ref refid="class_attempt__7_1_1_robot_1a7f204250cb4974ce920c698ce72556d8" kindref="member" tooltip="Accessor method that tells the direction the robot is going.">GetDirection</ref>()</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this.<ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_attempt__7_1_1_robot_1a4b7de5f5731480e25f70c0177495e635" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a4b7de5f5731480e25f70c0177495e635" kindref="member" tooltip="Called when the robot object is first made. The robot starts paused.">Initialize</ref>()</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a150306a7cb29e38e31b4c583dd260845" kindref="member" tooltip="Is the robot moving on each all to update? if paused = true then moving, if false then not moving...">paused</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.Initialize();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_attempt__7_1_1_robot_1a2ad0f76fceb915c1f1b0b98f4dc4686e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a2ad0f76fceb915c1f1b0b98f4dc4686e" kindref="member" tooltip="Turns the robot based on the value of the turnIndicator Turn indicator must be greater or less than t...">ChangeDirection</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>turnIndicator)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(turnIndicator<sp/>&gt;<sp/>this.<ref refid="class_attempt__7_1_1_robot_1ab4f37d2ec38b3a9fa404e6d9c74c54cc" kindref="member" tooltip="How big does the turn indicator have to be, before the robot turns. 20 is default.">changeDirectionThreshholdValue</ref><sp/>||<sp/>turnIndicator<sp/>&lt;<sp/>-this.<ref refid="class_attempt__7_1_1_robot_1ab4f37d2ec38b3a9fa404e6d9c74c54cc" kindref="member" tooltip="How big does the turn indicator have to be, before the robot turns. 20 is default.">changeDirectionThreshholdValue</ref>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref><sp/>+=<sp/>(Vector3.Cross(this.<ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref>,<sp/>Vector3.UnitZ)<sp/>/<sp/>2500)<sp/>*<sp/>turnIndicator;<sp/></highlight><highlight class="comment">//<sp/>2500<sp/>is<sp/>just<sp/>an<sp/>experimental<sp/>value<sp/>that<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref>.Normalize();<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>unit<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_attempt__7_1_1_robot_1a4643dee9895d602aa0257eebb09fa82a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a4643dee9895d602aa0257eebb09fa82a" kindref="member" tooltip="Main Update method. Calls all other methods for updating the robot. Because the robot is a GameCompon...">Update</ref>(GameTime<sp/>gameTime)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a26d9c782d2b45cea22c9214cddd65e64" kindref="member" tooltip="Checks to see if a key was pressed. F1,F2,Numpad4,NumPad6,NumPad8,NumPad2 are all checked...">GetKeyBoard</ref>(gameTime);<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>key<sp/>board<sp/>values.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.<ref refid="class_attempt__7_1_1_robot_1a150306a7cb29e38e31b4c583dd260845" kindref="member" tooltip="Is the robot moving on each all to update? if paused = true then moving, if false then not moving...">paused</ref><sp/>!=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a2c385dd8076a962677e83ad6a6dc2bba" kindref="member" tooltip="Position of the robot.">position</ref><sp/>+=<sp/>Vector3.Multiply(this.<ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref>,<sp/>this.<ref refid="class_attempt__7_1_1_robot_1a7bf6f1325eee035a51c8ab387e7a79b8" kindref="member" tooltip="Speed the robot is moving forward on update. /.">speed</ref>);<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>robot<sp/>forward<sp/>by<sp/>the<sp/>speed<sp/>of<sp/>the<sp/>robot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>robot<sp/>camera<sp/>based<sp/>on<sp/>its<sp/>new<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a7a9896ed9d9a0eff3a72a38d9a79e16d" kindref="member" tooltip="Camera associated with the robot.">robotCameraView</ref>.<ref refid="class_attempt__7_1_1_camera_1a950a4219356e02b8b8eddf506c03743f" kindref="member" tooltip="Sets the camera position and target point to a specific position.">SetCameraPositionAndTarget</ref>(this.<ref refid="class_attempt__7_1_1_robot_1a2c385dd8076a962677e83ad6a6dc2bba" kindref="member" tooltip="Position of the robot.">position</ref><sp/>+<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3(0,<sp/>0,<sp/>this.<ref refid="class_attempt__7_1_1_robot_1a4f546940b473ee32465833ddb9e14bc0" kindref="member" tooltip="Height of the camera above the robot.">cameraHeight</ref>),<sp/>this.<ref refid="class_attempt__7_1_1_robot_1a2c385dd8076a962677e83ad6a6dc2bba" kindref="member" tooltip="Position of the robot.">position</ref><sp/>+<sp/>Vector3.Multiply(</highlight><highlight class="keyword">this</highlight><highlight class="normal">.direction,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">.distanceToCameraTarget));<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>camera<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a7a9896ed9d9a0eff3a72a38d9a79e16d" kindref="member" tooltip="Camera associated with the robot.">robotCameraView</ref>.<ref refid="class_attempt__7_1_1_camera_1a0090d02f2acd45b0088ecd0123be57ef" kindref="member" tooltip="Updates the camera&amp;#39;s view. If the camera is mouse dependent than Update gets the position of the ...">Update</ref>(gameTime);<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>camera,<sp/>by<sp/>calling<sp/>the<sp/>camera&apos;s<sp/>update<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.Update(gameTime);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="class_attempt__7_1_1_robot_1a26d9c782d2b45cea22c9214cddd65e64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_attempt__7_1_1_robot_1a26d9c782d2b45cea22c9214cddd65e64" kindref="member" tooltip="Checks to see if a key was pressed. F1,F2,Numpad4,NumPad6,NumPad8,NumPad2 are all checked...">GetKeyBoard</ref>(GameTime<sp/>gameTime1)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeyboardState<sp/>keyboardState<sp/>=<sp/>Keyboard.GetState();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>pausing<sp/>the<sp/>game.<sp/>Force<sp/>500<sp/>milliseconds<sp/>between<sp/>toggles.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardState.IsKeyDown(Keys.F2)<sp/>&amp;&amp;<sp/>gameTime1.TotalGameTime.TotalMilliseconds<sp/>-<sp/>this.<ref refid="class_attempt__7_1_1_robot_1a6cce884644ea640990454230965f80c5" kindref="member" tooltip="Time in total milliseconds from the start of the game to the last time one of the keys was pressed...">timePressedKey</ref><sp/>&gt;<sp/>500)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a6cce884644ea640990454230965f80c5" kindref="member" tooltip="Time in total milliseconds from the start of the game to the last time one of the keys was pressed...">timePressedKey</ref><sp/>=<sp/>(int)gameTime1.TotalGameTime.TotalMilliseconds;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(this.<ref refid="class_attempt__7_1_1_robot_1a150306a7cb29e38e31b4c583dd260845" kindref="member" tooltip="Is the robot moving on each all to update? if paused = true then moving, if false then not moving...">paused</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a150306a7cb29e38e31b4c583dd260845" kindref="member" tooltip="Is the robot moving on each all to update? if paused = true then moving, if false then not moving...">paused</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a150306a7cb29e38e31b4c583dd260845" kindref="member" tooltip="Is the robot moving on each all to update? if paused = true then moving, if false then not moving...">paused</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>robot.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardState.IsKeyDown(Keys.F1)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a2c385dd8076a962677e83ad6a6dc2bba" kindref="member" tooltip="Position of the robot.">position</ref><sp/>=<sp/>this.<ref refid="class_attempt__7_1_1_robot_1aa928880825b2dadef2602204a6998854" kindref="member" tooltip="Where the robot starts. Needed so it can be reset.">startPosition</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardState.IsKeyDown(Keys.S)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref><sp/>-=<sp/>Vector3.Cross(this.<ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref>,<sp/>Vector3.UnitZ)<sp/>/<sp/>60;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref>.Normalize();<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>unit<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardState.IsKeyDown(Keys.F)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref><sp/>+=<sp/>Vector3.Cross(this.<ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref>,<sp/>Vector3.UnitZ)<sp/>/<sp/>60;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1aeab9c7a5393e1b353f90e179815d1d28" kindref="member" tooltip="Direction the robot is heading.">direction</ref>.Normalize();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>speed<sp/>faster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardState.IsKeyDown(Keys.E)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a7bf6f1325eee035a51c8ab387e7a79b8" kindref="member" tooltip="Speed the robot is moving forward on update. /.">speed</ref><sp/>+=<sp/>0.0001f;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>speed<sp/>slower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyboardState.IsKeyDown(Keys.D)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.<ref refid="class_attempt__7_1_1_robot_1a7bf6f1325eee035a51c8ab387e7a79b8" kindref="member" tooltip="Speed the robot is moving forward on update. /.">speed</ref><sp/>-=<sp/>0.0001f;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Anthony/Dropbox/Senior Project/attempt 7/attempt 7/attempt 7/Robot.cs"/>
  </compounddef>
</doxygen>
